import{_ as n,C as t,c as l,o as e,j as a,G as h,aQ as p,a as r}from"./chunks/framework.DEi4YP2n.js";const y=JSON.parse('{"title":"对象存储: 开发者需要理解的现代存储方案","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/Web传输/对象存储.md","filePath":"column/Network/Web传输/对象存储.md","lastUpdated":1758271646000}'),k={name:"column/Network/Web传输/对象存储.md"};function d(o,s,g,E,c,u){const i=t("ArticleMetadata");return e(),l("div",null,[s[0]||(s[0]=a("h1",{id:"对象存储-开发者需要理解的现代存储方案",tabindex:"-1"},[r("对象存储: 开发者需要理解的现代存储方案 "),a("a",{class:"header-anchor",href:"#对象存储-开发者需要理解的现代存储方案","aria-label":'Permalink to "对象存储: 开发者需要理解的现代存储方案"'},"​")],-1)),h(i),s[1]||(s[1]=p(`<p>对象存储<code>（Object Storage）</code>是当今互联网基础设施的核心组成部分，也是前端开发者必须了解的存储技术。</p><h2 id="_1-对象存储的直观理解" tabindex="-1"><strong>1. 对象存储的直观理解</strong> <a class="header-anchor" href="#_1-对象存储的直观理解" aria-label="Permalink to &quot;**1. 对象存储的直观理解**&quot;">​</a></h2><p>想象你有一个无限大的数字仓库：</p><ul><li>你存入的<strong>每个文件</strong>（图片、视频、文档等）都会被打包成一个独立的&quot;<strong>对象</strong>&quot;</li><li>每个对象会获得一个<strong>唯一的网址（URL）</strong></li><li>你可以通过这个 URL 在全球任何地方快速访问这个文件</li></ul><p>这就是对象存储最基础的工作方式。常见的服务包括：<strong>AWS S3、阿里云 OSS、腾讯云 COS</strong>等。</p><h2 id="_2-对象存储的三大核心特点" tabindex="-1"><strong>2. 对象存储的三大核心特点</strong> <a class="header-anchor" href="#_2-对象存储的三大核心特点" aria-label="Permalink to &quot;**2. 对象存储的三大核心特点**&quot;">​</a></h2><h3 id="_2-1-扁平化结构-不像文件夹" tabindex="-1"><strong>2.1 扁平化结构（不像文件夹）</strong> <a class="header-anchor" href="#_2-1-扁平化结构-不像文件夹" aria-label="Permalink to &quot;**2.1 扁平化结构（不像文件夹）**&quot;">​</a></h3><table tabindex="0"><thead><tr><th>传统文件系统</th><th>对象存储</th></tr></thead><tbody><tr><td><code>/images/2023/avatar.jpg</code></td><td><code>https://bucket.oss.com/3a5b9c.jpg</code></td></tr><tr><td>严格的层级目录</td><td>只有&quot;存储桶(bucket)&quot;和&quot;对象&quot;两个概念</td></tr></tbody></table><p><strong>前端意义</strong>：资源引用更简单，直接使用完整 URL 即可</p><h3 id="_2-2-无限扩展" tabindex="-1"><strong>2.2 无限扩展</strong> <a class="header-anchor" href="#_2-2-无限扩展" aria-label="Permalink to &quot;**2.2 无限扩展**&quot;">​</a></h3><ul><li>自动扩容，无需担心磁盘空间不足</li><li>适合存储用户上传的图片/视频等 UGC 内容</li></ul><h3 id="_2-3-http-https-访问" tabindex="-1"><strong>2.3 HTTP/HTTPS 访问</strong> <a class="header-anchor" href="#_2-3-http-https-访问" aria-label="Permalink to &quot;**2.3 HTTP/HTTPS 访问**&quot;">​</a></h3><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 前端直接引用对象存储资源 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://my-bucket.s3.amazonaws.com/user-uploads/123.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>所有对象都通过标准的 Web 协议访问，与前端天然兼容</p><h2 id="_3-对象存储-vs-传统存储" tabindex="-1"><strong>3. 对象存储 vs 传统存储</strong> <a class="header-anchor" href="#_3-对象存储-vs-传统存储" aria-label="Permalink to &quot;**3. 对象存储 vs 传统存储**&quot;">​</a></h2><table tabindex="0"><thead><tr><th>对比项</th><th>对象存储</th><th>传统服务器存储</th></tr></thead><tbody><tr><td><strong>访问方式</strong></td><td>HTTP/HTTPS</td><td>文件系统路径</td></tr><tr><td><strong>扩展性</strong></td><td>无限扩展</td><td>受磁盘容量限制</td></tr><tr><td><strong>成本</strong></td><td>按用量付费</td><td>预先购买硬件</td></tr><tr><td><strong>性能</strong></td><td>适合海量小文件</td><td>适合高频修改的文件</td></tr><tr><td><strong>前端集成</strong></td><td>直接引用 URL</td><td>需要后端代理</td></tr></tbody></table><h2 id="_4-对象存储如何与前端协作" tabindex="-1"><strong>4. 对象存储如何与前端协作</strong> <a class="header-anchor" href="#_4-对象存储如何与前端协作" aria-label="Permalink to &quot;**4. 对象存储如何与前端协作**&quot;">​</a></h2><h3 id="_4-1-静态资源托管" tabindex="-1"><strong>4.1 静态资源托管</strong> <a class="header-anchor" href="#_4-1-静态资源托管" aria-label="Permalink to &quot;**4.1 静态资源托管**&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// webpack配置CDN地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  publicPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://static.yourcdn.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>将构建后的 JS/CSS/图片直接部署到对象存储，通过 CDN 加速</p><h3 id="_4-2-用户文件上传" tabindex="-1"><strong>4.2 用户文件上传</strong> <a class="header-anchor" href="#_4-2-用户文件上传" aria-label="Permalink to &quot;**4.2 用户文件上传**&quot;">​</a></h3><h4 id="方案-1-前端直传-推荐" tabindex="-1">方案 1：前端直传（推荐） <a class="header-anchor" href="#方案-1-前端直传-推荐" aria-label="Permalink to &quot;方案 1：前端直传（推荐）&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从后端获取临时上传凭证</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPresignedPost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> formData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">entries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fields).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(([</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    formData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key, val);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  formData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, file);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url, { method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: formData });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>优势</strong>：节省服务器带宽，上传速度更快</p><h4 id="方案-2-通过后端中转" tabindex="-1">方案 2：通过后端中转 <a class="header-anchor" href="#方案-2-通过后端中转" aria-label="Permalink to &quot;方案 2：通过后端中转&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 传统表单上传</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> form</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">form.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, file);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/upload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: form });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-3-图片处理" tabindex="-1"><strong>4.3 图片处理</strong> <a class="header-anchor" href="#_4-3-图片处理" aria-label="Permalink to &quot;**4.3 图片处理**&quot;">​</a></h3><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 使用OSS图片处理服务 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://bucket.oss.com/image.jpg?x-oss-process=image/resize,w_300&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>常见处理：缩放、裁剪、水印、格式转换</p><h2 id="_5-前端需要关注的安全问题" tabindex="-1"><strong>5. 前端需要关注的安全问题</strong> <a class="header-anchor" href="#_5-前端需要关注的安全问题" aria-label="Permalink to &quot;**5. 前端需要关注的安全问题**&quot;">​</a></h2><h3 id="_5-1-权限控制" tabindex="-1"><strong>5.1 权限控制</strong> <a class="header-anchor" href="#_5-1-权限控制" aria-label="Permalink to &quot;**5.1 权限控制**&quot;">​</a></h3><ul><li><strong>公开读取</strong>：适合不敏感资源（如产品图片）</li><li><strong>私有访问</strong>：需要签名 URL（如用户隐私文件）</li></ul><h3 id="_5-2-cors-配置" tabindex="-1"><strong>5.2 CORS 配置</strong> <a class="header-anchor" href="#_5-2-cors-配置" aria-label="Permalink to &quot;**5.2 CORS 配置**&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 存储桶的CORS配置示例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;AllowedOrigins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://yourdomain.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;AllowedMethods&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;MaxAgeSeconds&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>确保前端只能从指定域名访问资源</p><h3 id="_5-3-防盗链" tabindex="-1"><strong>5.3 防盗链</strong> <a class="header-anchor" href="#_5-3-防盗链" aria-label="Permalink to &quot;**5.3 防盗链**&quot;">​</a></h3><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Referer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://yourdomain.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>防止其他网站直接盗用你的存储资源</p><h2 id="_6-对象存储的典型应用场景" tabindex="-1"><strong>6. 对象存储的典型应用场景</strong> <a class="header-anchor" href="#_6-对象存储的典型应用场景" aria-label="Permalink to &quot;**6. 对象存储的典型应用场景**&quot;">​</a></h2><ol><li><strong>用户生成内容(UGC)存储</strong><ul><li>用户头像、上传的图片/视频</li></ul></li><li><strong>静态网站托管</strong><ul><li>将 Vue/React 构建产物直接部署到 OSS</li></ul></li><li><strong>大数据分析</strong><ul><li>存储前端埋点日志</li></ul></li><li><strong>备份归档</strong><ul><li>前端错误日志的长期存储</li></ul></li></ol><h2 id="_7-最新趋势-边缘存储" tabindex="-1"><strong>7. 最新趋势：边缘存储</strong> <a class="header-anchor" href="#_7-最新趋势-边缘存储" aria-label="Permalink to &quot;**7. 最新趋势：边缘存储**&quot;">​</a></h2><p>新一代对象存储（如 Cloudflare R2）特点：</p><ul><li><strong>零出口费用</strong>：不收取下载流量费</li><li><strong>边缘计算</strong>：在 CDN 节点就近处理数据</li><li><strong>Web3 集成</strong>：兼容 IPFS 等去中心化存储</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用Workers处理存储对象</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fetch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.request));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MY_BUCKET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;some-key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(object.body);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,44))])}const m=n(k,[["render",d]]);export{y as __pageData,m as default};
