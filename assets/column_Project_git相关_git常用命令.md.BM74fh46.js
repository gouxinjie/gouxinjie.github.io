import{_ as i,C as e,c as d,o as n,j as a,G as l,aQ as r,a as o}from"./chunks/framework.DEi4YP2n.js";const p="/assets/git-11.q56tkuw2.png",y=JSON.parse('{"title":"Git 安装与常用命令指南","description":"","frontmatter":{},"headers":[],"relativePath":"column/Project/git相关/git常用命令.md","filePath":"column/Project/git相关/git常用命令.md","lastUpdated":1758617659000}'),h={name:"column/Project/git相关/git常用命令.md"};function c(g,t,k,b,u,m){const s=e("ArticleMetadata");return n(),d("div",null,[t[0]||(t[0]=a("h1",{id:"git-安装与常用命令指南",tabindex:"-1"},[o("Git 安装与常用命令指南 "),a("a",{class:"header-anchor",href:"#git-安装与常用命令指南","aria-label":'Permalink to "Git 安装与常用命令指南"'},"​")],-1)),l(s),t[1]||(t[1]=r('<p><img src="'+p+`" alt="git 常用命令" loading="lazy"></p><p><code>Git</code> 是一个分布式版本控制软件，用于管理代码的版本。</p><p><code>Git</code> 是目前最流行的分布式版本控制系统，无论是个人开发还是团队协作，<code>Git</code> 都能高效地管理代码版本。</p><h2 id="一、git-安装" tabindex="-1">一、Git 安装 <a class="header-anchor" href="#一、git-安装" aria-label="Permalink to &quot;一、Git 安装&quot;">​</a></h2><h3 id="windows-系统" tabindex="-1">Windows 系统 <a class="header-anchor" href="#windows-系统" aria-label="Permalink to &quot;Windows 系统&quot;">​</a></h3><ol><li>访问 Git 官网下载页面：<a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">https://git-scm.com/download/win</a></li><li>下载适用于 Windows 的安装程序</li><li>运行安装程序，按照提示完成安装</li><li>安装完成后，在命令行输入 <code>git --version</code> 验证安装</li></ol><h3 id="macos-系统" tabindex="-1">macOS 系统 <a class="header-anchor" href="#macos-系统" aria-label="Permalink to &quot;macOS 系统&quot;">​</a></h3><p><strong>使用 Homebrew 安装：</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>或下载官方安装程序：</strong> 访问 <a href="https://git-scm.com/download/mac" target="_blank" rel="noreferrer">https://git-scm.com/download/mac</a></p><h3 id="linux-系统" tabindex="-1">Linux 系统 <a class="header-anchor" href="#linux-系统" aria-label="Permalink to &quot;Linux 系统&quot;">​</a></h3><p><strong>Ubuntu/Debian：</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>CentOS/Fedora：</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="二、git-配置" tabindex="-1">二、Git 配置 <a class="header-anchor" href="#二、git-配置" aria-label="Permalink to &quot;二、Git 配置&quot;">​</a></h2><p>安装完成后，首先需要配置用户信息：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;你的用户名&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;你的邮箱&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>查看配置信息：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="三、git-常用命令" tabindex="-1">三、Git 常用命令 <a class="header-anchor" href="#三、git-常用命令" aria-label="Permalink to &quot;三、Git 常用命令&quot;">​</a></h2><h3 id="_1-基本操作命令" tabindex="-1">1. 基本操作命令 <a class="header-anchor" href="#_1-基本操作命令" aria-label="Permalink to &quot;1. 基本操作命令&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>git init</code></td><td>初始化一个新的 Git 仓库</td></tr><tr><td><code>git status</code></td><td>显示工作目录和暂存区的状态</td></tr><tr><td><code>git status --short</code></td><td>以简短格式显示状态信息</td></tr><tr><td><code>git status --porcelain</code></td><td>以机器可读的格式显示状态信息</td></tr><tr><td><code>git branch</code></td><td>列出所有本地分支</td></tr><tr><td><code>git branch -a</code></td><td>列出所有本地和远程分支</td></tr><tr><td><code>git branch -v</code></td><td>列出所有本地分支及其最新提交信息</td></tr><tr><td><code>git log</code></td><td>显示提交历史</td></tr><tr><td><code>git log --oneline</code></td><td>以一行形式显示提交历史</td></tr><tr><td><code>git log --graph</code></td><td>以图形方式显示提交历史</td></tr><tr><td><code>gitk</code></td><td>图形化显示提交历史</td></tr><tr><td><code>git remote</code></td><td>列出所有远程仓库</td></tr><tr><td><code>git remote -v</code></td><td>详细列出所有远程仓库及其 URL</td></tr><tr><td><code>git config --list</code></td><td>列出所有 Git 配置项</td></tr><tr><td><code>git config user.name</code></td><td>查看用户名</td></tr><tr><td><code>git config user.email</code></td><td>查看邮箱地址</td></tr></tbody></table><h3 id="_2-文件操作命令" tabindex="-1">2. 文件操作命令 <a class="header-anchor" href="#_2-文件操作命令" aria-label="Permalink to &quot;2. 文件操作命令&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>git add &lt;file&gt;</code></td><td>添加指定文件到暂存区</td></tr><tr><td><code>git add .</code></td><td>添加所有已修改的文件到暂存区</td></tr><tr><td><code>git add -A</code></td><td>添加所有已修改的文件和未跟踪的新文件到暂存区</td></tr><tr><td><code>git reset &lt;file&gt;</code></td><td>从暂存区中取消暂存指定文件</td></tr><tr><td><code>git reset .</code></td><td>从暂存区中取消暂存所有文件</td></tr><tr><td><code>git reset --hard</code></td><td>取消所有暂存的更改，恢复到上次提交的状态</td></tr><tr><td><code>git commit -m &quot;Commit message&quot;</code></td><td>提交暂存区中的更改</td></tr><tr><td><code>git commit -am &quot;Commit message&quot;</code></td><td>提交所有已修改的文件，并添加到暂存区</td></tr><tr><td><code>git checkout -- &lt;file&gt;</code></td><td>撤销工作目录中的更改</td></tr><tr><td><code>git reset HEAD &lt;file&gt;</code></td><td>取消暂存区中的更改</td></tr><tr><td><code>git checkout &lt;commit&gt; &lt;file&gt;</code></td><td>恢复指定提交中的文件版本</td></tr><tr><td><code>git checkout &lt;branch&gt; &lt;file&gt;</code></td><td>从指定分支恢复文件版本</td></tr></tbody></table><h3 id="_3-分支操作命令" tabindex="-1">3. 分支操作命令 <a class="header-anchor" href="#_3-分支操作命令" aria-label="Permalink to &quot;3. 分支操作命令&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>git branch &lt;branch-name&gt;</code></td><td>创建新分支</td></tr><tr><td><code>git checkout -b &lt;branch-name&gt;</code></td><td>创建并切换到新分支</td></tr><tr><td><code>git switch -c &lt;branch-name&gt;</code></td><td>（Git 2.23+）创建并切换到新分支</td></tr><tr><td><code>git checkout &lt;branch-name&gt;</code></td><td>切换到指定分支</td></tr><tr><td><code>git switch &lt;branch-name&gt;</code></td><td>（Git 2.23+）切换到指定分支</td></tr><tr><td><code>git branch -d &lt;branch-name&gt;</code></td><td>删除已合并的本地分支</td></tr><tr><td><code>git branch -D &lt;branch-name&gt;</code></td><td>强制删除本地分支（即使未合并）</td></tr><tr><td><code>git merge &lt;branch-name&gt;</code></td><td>将指定分支合并到当前分支</td></tr><tr><td><code>git merge --no-commit &lt;branch-name&gt;</code></td><td>合并更改但不提交</td></tr><tr><td><code>git log --graph --oneline --decorate</code></td><td>以图形方式显示分支关系</td></tr></tbody></table><h3 id="_4-远程仓库操作命令" tabindex="-1">4. 远程仓库操作命令 <a class="header-anchor" href="#_4-远程仓库操作命令" aria-label="Permalink to &quot;4. 远程仓库操作命令&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>git remote add &lt;name&gt; &lt;url&gt;</code></td><td>添加新的远程仓库</td></tr><tr><td><code>git fetch &lt;remote&gt;</code></td><td>从远程仓库获取最新的更改</td></tr><tr><td><code>git fetch &lt;remote&gt; &lt;branch&gt;</code></td><td>从远程仓库获取指定分支的更改</td></tr><tr><td><code>git pull &lt;remote&gt; &lt;branch&gt;</code></td><td>从远程仓库拉取更改并合并到当前分支</td></tr><tr><td><code>git pull</code></td><td>从默认远程仓库（通常是 <code>origin</code>）拉取并合并到当前分支</td></tr><tr><td><code>git push &lt;remote&gt; &lt;branch&gt;</code></td><td>将本地分支的更改推送到远程仓库</td></tr><tr><td><code>git push</code></td><td>将当前分支的更改推送到默认远程仓库（通常是 <code>origin</code>）</td></tr><tr><td><code>git push --set-upstream &lt;remote&gt; &lt;branch&gt;</code></td><td>设置远程分支的追踪关系，并推送更改</td></tr><tr><td><code>git push &lt;remote&gt; --delete &lt;branch&gt;</code></td><td>删除远程仓库中的分支</td></tr></tbody></table><h3 id="_5-其他常用命令" tabindex="-1">5. 其他常用命令 <a class="header-anchor" href="#_5-其他常用命令" aria-label="Permalink to &quot;5. 其他常用命令&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>git tag &lt;tag-name&gt;</code></td><td>创建新标签</td></tr><tr><td><code>git push &lt;remote&gt; &lt;tag-name&gt;</code></td><td>将标签推送到远程仓库</td></tr><tr><td><code>git tag</code></td><td>列出所有本地标签</td></tr><tr><td><code>git describe</code></td><td>显示最近的标签</td></tr><tr><td><code>git reset &lt;commit&gt;</code></td><td>将暂存区恢复到指定提交的状态</td></tr><tr><td><code>git reset --hard &lt;commit&gt;</code></td><td>将工作目录恢复到指定提交的状态</td></tr><tr><td><code>git reset --soft &lt;commit&gt;</code></td><td>只移动当前分支的指针，不改变暂存区或工作目录</td></tr><tr><td><code>git diff &gt; patchfile.patch</code></td><td>导出补丁文件</td></tr><tr><td><code>git apply patchfile.patch</code></td><td>应用补丁文件</td></tr><tr><td><code>git stash</code></td><td>暂存当前工作目录中的所有更改</td></tr><tr><td><code>git stash list</code></td><td>列出所有暂存记录</td></tr><tr><td><code>git stash apply</code></td><td>恢复暂存的更改</td></tr><tr><td><code>git stash pop</code></td><td>恢复暂存的更改并删除记录</td></tr></tbody></table><h2 id="四、实用技巧和工作流程" tabindex="-1">四、实用技巧和工作流程 <a class="header-anchor" href="#四、实用技巧和工作流程" aria-label="Permalink to &quot;四、实用技巧和工作流程&quot;">​</a></h2><h3 id="_1-忽略文件" tabindex="-1">1. 忽略文件 <a class="header-anchor" href="#_1-忽略文件" aria-label="Permalink to &quot;1. 忽略文件&quot;">​</a></h3><p>创建 <code>.gitignore</code> 文件来指定需要忽略的文件和目录，例如：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 忽略日志文件</span></span>
<span class="line"><span>*.log</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 忽略编译生成的文件</span></span>
<span class="line"><span>build/</span></span>
<span class="line"><span>dist/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 忽略IDE配置文件</span></span>
<span class="line"><span>.vscode/</span></span>
<span class="line"><span>.idea/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_2-典型工作流程" tabindex="-1">2. 典型工作流程 <a class="header-anchor" href="#_2-典型工作流程" aria-label="Permalink to &quot;2. 典型工作流程&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repository-ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建新分支进行功能开发</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/new-feature</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加和提交更改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;实现新功能&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 推送到远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/new-feature</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建拉取请求（在代码托管平台上完成）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_3-解决冲突" tabindex="-1">3. 解决冲突 <a class="header-anchor" href="#_3-解决冲突" aria-label="Permalink to &quot;3. 解决冲突&quot;">​</a></h3><p>当合并分支遇到冲突时：</p><ol><li>打开冲突文件，找到冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;, =======, &gt;&gt;&gt;&gt;&gt;&gt;&gt;）</li><li>手动解决冲突，保留需要的代码</li><li>添加解决后的文件：<code>git add &lt;file&gt;</code></li><li>完成合并：<code>git commit</code></li></ol>`,40))])}const C=i(h,[["render",c]]);export{y as __pageData,C as default};
