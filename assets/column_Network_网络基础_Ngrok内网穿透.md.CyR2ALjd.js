import{_ as n,C as e,c as p,o as l,j as a,G as t,aQ as r,a as o}from"./chunks/framework.DEi4YP2n.js";const h="/assets/Ngrok-1.DYIKQ-oh.png",d="/assets/Ngrok-2.DGPW2YN6.png",k="/assets/Ngrok-3.BaIQFLnM.png",c="/assets/Ngrok-4.ClgwRDRF.png",g="/assets/Ngrok-5.DdVMiGbp.png",b="/assets/Ngrok-6.vfoSh9gu.png",u="/assets/Ngrok-7.CsvDZiNN.png",m="/assets/Ngrok-8.ICbS0QjE.png",F="/assets/Ngrok-9.D8hB5lfp.png",y="/assets/Ngrok-10.PnsuWap0.png",E="/assets/Ngrok-11.DIBI0mil.png",C="/assets/Ngrok-13.Bf0pvA1W.png",_="/assets/Ngrok-12.jK8OnryY.png",P=JSON.parse('{"title":"Ngrok 内网穿透 ：开发者的利器","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/网络基础/Ngrok内网穿透.md","filePath":"column/Network/网络基础/Ngrok内网穿透.md","lastUpdated":1760075323000}'),v={name:"column/Network/网络基础/Ngrok内网穿透.md"};function f(B,s,w,N,q,A){const i=e("ArticleMetadata");return l(),p("div",null,[s[0]||(s[0]=a("h1",{id:"ngrok-内网穿透-开发者的利器",tabindex:"-1"},[o("Ngrok 内网穿透 ：开发者的利器 "),a("a",{class:"header-anchor",href:"#ngrok-内网穿透-开发者的利器","aria-label":'Permalink to "Ngrok 内网穿透 ：开发者的利器"'},"​")],-1)),t(i),s[1]||(s[1]=r('<nav class="table-of-contents"><ul><li><a href="#一、安装和注册">一、安装和注册</a><ul><li><a href="#_1-1-下载">1.1 下载</a></li><li><a href="#_1-2-注册-登录">1.2 注册，登录</a></li><li><a href="#_1-3-多因素认证">1.3 多因素认证</a></li><li><a href="#_1-4-恢复码设置">1.4 恢复码设置</a></li></ul></li><li><a href="#二、使用">二、使用</a><ul><li><a href="#_2-1-启动-ngrok">2.1 启动 ngrok</a></li><li><a href="#_2-2-内网穿透">2.2 内网穿透</a></li><li><a href="#_2-3-启动隧道">2.3 启动隧道</a></li><li><a href="#_2-4-测试">2.4 测试</a></li></ul></li><li><a href="#三、隐私相关">三、隐私相关</a></li></ul></nav><p><strong>什么是 ngrok？</strong></p><p><code>ngrok</code>是一个反向代理工具，能够创建从公共互联网到本地服务的安全隧道。它解决了开发者面临的几个核心问题：</p><p>1、无公网 IP：大多数开发者没有固定公网 IP</p><p>2、防火墙限制：公司/学校网络通常限制入站连接</p><p>3、HTTPS 支持：为本地服务提供 HTTPS 支持</p><p>4、临时需求：快速分享本地开发环境</p><h2 id="一、安装和注册" tabindex="-1">一、安装和注册 <a class="header-anchor" href="#一、安装和注册" aria-label="Permalink to &quot;一、安装和注册&quot;">​</a></h2><h3 id="_1-1-下载" tabindex="-1">1.1 下载 <a class="header-anchor" href="#_1-1-下载" aria-label="Permalink to &quot;1.1 下载&quot;">​</a></h3><p><code>ngrok官网</code>：<a href="https://ngrok.com/" target="_blank" rel="noreferrer">https://ngrok.com/</a></p><p><img src="'+h+'" alt="ngrok下载" loading="lazy"></p><h3 id="_1-2-注册-登录" tabindex="-1">1.2 注册，登录 <a class="header-anchor" href="#_1-2-注册-登录" aria-label="Permalink to &quot;1.2 注册，登录&quot;">​</a></h3><p>注册，登录，可以使用<code>github</code>或者谷歌账号登录。</p><p><img src="'+d+'" alt="ngrok下载" width="60%" loading="lazy"></p><h3 id="_1-3-多因素认证" tabindex="-1">1.3 多因素认证 <a class="header-anchor" href="#_1-3-多因素认证" aria-label="Permalink to &quot;1.3 多因素认证&quot;">​</a></h3><p>为了增加安全性，ngrok 提供了多因素认证功能。在注册账号后，你可以启用多因素认证，增加账号的安全性。</p><p>提示用户使用认证器应用(如<code>1Password、Google Authenticator或Microsoft Authenticator</code>)生成一次性密码。如图所示：</p><p><img src="'+k+'" alt="ngrok下载" width="80%" loading="lazy"></p><p>然后使用手机客户端 <code>Authenticator</code> 扫描<code>二维码</code>，获取一次性密码（如下图所示）。</p><p><img src="'+c+'" alt="ngrok下载" width="80%" loading="lazy"></p><p><strong>点击</strong> <code>Continue</code>，继续下面操作。</p><h3 id="_1-4-恢复码设置" tabindex="-1">1.4 恢复码设置 <a class="header-anchor" href="#_1-4-恢复码设置" aria-label="Permalink to &quot;1.4 恢复码设置&quot;">​</a></h3><p>以下代码用于在您无法访问 <code>MFA</code> 身份验证器时恢复您的账户。请像保护密码一样安全地保存这些恢复码。我们建议使用密码管理器，如<code>lPassword、KeePassXC、orbitwarden</code>。</p><p>如果你找不到这些验证码，你将无法访问你的账户。</p><p><img src="'+g+'" alt="ngrok下载" width="80%" loading="lazy"></p><p>可以点击复制或下载保存恢复码。</p><p>然后<strong>点击</strong> <code>Finish</code>，继续下面操作。</p><p><img src="'+b+'" alt="ngrok下载" width="80%" loading="lazy"></p><p><strong>继续点击</strong> <code>Continue</code>，完成注册流程。</p><h2 id="二、使用" tabindex="-1">二、使用 <a class="header-anchor" href="#二、使用" aria-label="Permalink to &quot;二、使用&quot;">​</a></h2><h3 id="_2-1-启动-ngrok" tabindex="-1">2.1 启动 ngrok <a class="header-anchor" href="#_2-1-启动-ngrok" aria-label="Permalink to &quot;2.1 启动 ngrok&quot;">​</a></h3><p>到刚才<code>ngrok</code>官网下载的.exe 所在文件下执行这个命令：</p><p><img src="'+u+'" alt="ngrok下载" loading="lazy"></p><p>需要带上<code>token</code>如图：</p><p><img src="'+m+'" alt="ngrok下载" loading="lazy"></p><p><strong>开始执行命令</strong>：</p><p><img src="'+F+'" alt="ngrok下载" loading="lazy"></p><p>这时，你的密钥已经保存到如上目录的<code>ngrok.yml</code>文件中了。</p><h3 id="_2-2-内网穿透" tabindex="-1">2.2 内网穿透 <a class="header-anchor" href="#_2-2-内网穿透" aria-label="Permalink to &quot;2.2 内网穿透&quot;">​</a></h3><p>首先，<code>去ngrok官网获取domains</code> 用来作为要对外提供的固定访问地址，先创建一个<code>domain</code>:</p><p><img src="'+y+'" alt="ngrok下载" loading="lazy"></p><p>自动生成：</p><p><img src="'+E+`" alt="ngrok下载" loading="lazy"></p><p>点击图中划红线的部分：<code>Domain:eagerly-flowing-woodcock.ngrok-free.app</code> 然后打开<code>ngrok.yml</code>文件（在已有的基础上添加如下配置，添加前后端两个隧道）</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tunnels:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  frontdemo:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proto:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    addr:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5173</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    domain:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eagerly-flowing-woodcock.ngrok-free.app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  backdemo:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proto:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    addr:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7500</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    domain:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eagerly-flowing-woodcock.ngrok-free.app</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># inspect: false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>domain</code> 要替换为自己的。</p><p><code>domain</code> 是外网访问的固定地址。</p><p><code>addr</code> 是映射到本地服务的端口。</p><p><code>frontdemo</code> 是前端服务的名称。 <code>backdemo</code> 是后端服务的名称。都是可以自定义的。</p><h3 id="_2-3-启动隧道" tabindex="-1">2.3 启动隧道 <a class="header-anchor" href="#_2-3-启动隧道" aria-label="Permalink to &quot;2.3 启动隧道&quot;">​</a></h3><p>执行如下命令， 注意前后端都启动，则<code>domain</code>要设置成不一样的</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#前后端都启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ngrok</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#只启动前端/后端</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ngrok</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frontdemo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ngrok</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backdemo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这里我们只启动前端服务，所以执行<code>ngrok start frontdemo</code>即可。</p><p><img src="`+C+'" alt="ngrok下载" loading="lazy"></p><p>图中划线的位置可以看出，<code>https://eagerly-flowing-woodcock.ngrok-free.app</code> 已经映射到我们前端本地项目开启的服务了 <code>http://localhost:5173 </code></p><h3 id="_2-4-测试" tabindex="-1">2.4 测试 <a class="header-anchor" href="#_2-4-测试" aria-label="Permalink to &quot;2.4 测试&quot;">​</a></h3><p>打开浏览器，输入<code>https://eagerly-flowing-woodcock.ngrok-free.app</code>，即可访问到本地服务。</p><p><img src="'+_+`" alt="ngrok下载" loading="lazy"></p><p>这是由于第一次访问，没有信任感，点下<code>visit site</code>就可以了。.</p><p>然后又会出现以下提示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Blocked request. This </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;eagerly-flowing-woodcock.ngrok-free.app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) is not allowed.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">To allow </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host, add </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;eagerly-flowing-woodcock.ngrok-free.app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`server.allowedHosts\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vite.config.js.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这是由于<code>Vite</code>的限制<code>,Vite </code>项目里，有 <code>server.allowedHosts</code> 配置项，作用是限制哪些域名 / 主机能访问你的本地开发服务，防止非法域名的访问，保障开发环境安全。改造下就可以了。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  server: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 允许访问的主机，添加 ngrok 的域名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allowedHosts: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;eagerly-flowing-woodcock.ngrok-free.app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 你的ngrok域名</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;.ngrok-free.app&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 允许所有ngrok免费域名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>然后重新启动前端服务，访问<code>https://eagerly-flowing-woodcock.ngrok-free.app</code> 即可。</strong></p><h2 id="三、隐私相关" tabindex="-1">三、隐私相关 <a class="header-anchor" href="#三、隐私相关" aria-label="Permalink to &quot;三、隐私相关&quot;">​</a></h2><p><code>ngrok.exe </code>文件位置:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">injie</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esktop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grok.exe&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>ngrok.yml</code>配置文件目录：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\Users\\xinjie\\AppData\\Local\\ngrok</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用<code>1Password、Google Authenticator或Microsoft Authenticator</code>等身份验证应用程序来生成一次性密码:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BFKHMH7AS6E34G3TO7NZAI4VTHTZEXTY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>以下代码用于在您无法访问 MFA 身份验证器时恢复您的账户。如果你找不到这些验证码，你将无法访问你的账户。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HWU6ZXSZQU</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YJA7RGNUTD</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SSUNDW8VPB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ZKYWJX8GK</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPX379FPZ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">49</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SKRZENDR</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M76MKSKKYX</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PE7E63XYK9</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4VP4K66GU</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">XCVDYWZAT</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,73))])}const x=n(v,[["render",f]]);export{P as __pageData,x as default};
