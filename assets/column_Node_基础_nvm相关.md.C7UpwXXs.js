import{_ as n,c as a,o as e,aQ as p}from"./chunks/framework.ZszFOjJI.js";const o="/assets/nvm.BPxA8ztU.png",i="/assets/nvm-1.byd2kpT4.png",l="/assets/nvm-2.Db_xI4ms.png",t="/assets/nvm-3.3ea9iwTq.png",r="/assets/nvm-4.2klIhpdC.png",d="/assets/nvm-11.CvsP74GA.png",c="/assets/nvm-12.DKvpZ0PV.png",y=JSON.parse('{"title":"NVM 使用：Node.js 版本管理利器","description":"","frontmatter":{},"headers":[],"relativePath":"column/Node/基础/nvm相关.md","filePath":"column/Node/基础/nvm相关.md","lastUpdated":1757038744000}'),m={name:"column/Node/基础/nvm相关.md"};function u(b,s,v,h,g,_){return e(),a("div",null,[...s[0]||(s[0]=[p('<h1 id="nvm-使用-node-js-版本管理利器" tabindex="-1"><strong>NVM 使用：Node.js 版本管理利器</strong> <a class="header-anchor" href="#nvm-使用-node-js-版本管理利器" aria-label="Permalink to &quot;**NVM 使用：Node.js 版本管理利器**&quot;">​</a></h1><p><code>NVM（Node Version Manager</code>）是 <code>Node.js</code> 开发者必备的工具，它允许你在同一台机器上安装和管理多个<code> Node.js</code> 版本。对于维护和开发多个不同的项目很是方便。</p><h2 id="一、nvm-的安装和使用" tabindex="-1">一、nvm 的安装和使用 <a class="header-anchor" href="#一、nvm-的安装和使用" aria-label="Permalink to &quot;一、nvm 的安装和使用&quot;">​</a></h2><p><img src="'+o+`" alt="在这里插入图片描述" loading="lazy"></p><h3 id="_1-1、介绍" tabindex="-1">1.1、介绍 <a class="header-anchor" href="#_1-1、介绍" aria-label="Permalink to &quot;1.1、介绍&quot;">​</a></h3><blockquote><p>nvm 全名<code>node.js version management</code> 它是一个 nodejs 的版本管理工具；通过它可以安装和切换不同版本的 nodejs；</p></blockquote><p>管理不同的 node 版本在日常开发中也是很方便的；比如 vue3 的项目对 node.js 版本需求比较高 15.0+；这样我们同时开发 vue2 和 vue3 项目时，我们使用 nvm 可以随时切换 node 的版本进行开发；</p><p>启动 vue3 项目如果出现下面这两行报错时，说明你的 node 版本过低：</p><div class="language-clike vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">clike</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>error when starting dev server:</span></span>
<span class="line"><span>Error: Cannot find module &#39;node:url&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2、安装-nvm" tabindex="-1">1.2、安装 nvm <a class="header-anchor" href="#_1-2、安装-nvm" aria-label="Permalink to &quot;1.2、安装 nvm&quot;">​</a></h3><p><strong>1，安装包下载地址</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://github.com/coreybutler/nvm-windows/releases/download/1.1.9/nvm-setup.zip</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>2，解压然后双击安装</strong> <img src="`+i+'" alt="在这里插入图片描述" loading="lazy"></p><p><strong>3，等待安装...</strong></p><p><strong>4，安装完成后 在 cmd 命令窗口输入 <code>nvm -v / nvm -V / nvm -version</code></strong></p><p>出现版本号说明安装成功；</p><p><img src="'+l+'" alt="在这里插入图片描述" loading="lazy"></p><h2 id="二、常用命令" tabindex="-1">二、常用命令 <a class="header-anchor" href="#二、常用命令" aria-label="Permalink to &quot;二、常用命令&quot;">​</a></h2><p><strong>1，查看目前使用的版本</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm ls</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+t+'" alt="在这里插入图片描述" loading="lazy"></p><p><strong>2，查看 node 的目前的所有版本</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> nvm list available</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+r+`" alt="在这里插入图片描述" loading="lazy"></p><p><strong>3，下载需要的 node 版本</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm install 16.16.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>4，切换版本</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> nvm use 16.16.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>5，其他常用命令</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm install latest：安装最新稳定版node.js</span></span>
<span class="line"><span>nvm install [version]：安装指定版本node.js</span></span>
<span class="line"><span>nvm use [version]：使用某个版本node.js</span></span>
<span class="line"><span>nvm list：列出当前安装的node.js版本列表</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nvm uninstall [version]：卸载指定版本的node.js</span></span>
<span class="line"><span>卸载一个版本后用 nvm list命令查看竟然还可以查出来； 就是使用不了 （也不知道是不是bug）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nvm node_mirror [url]：配置nvm的镜像</span></span>
<span class="line"><span>nvm npm_mirror [url]：配置npm的镜像</span></span>
<span class="line"><span>nvm arch：显示node是运行在32位还是64位。</span></span>
<span class="line"><span>nvm on：开启node.js版本管理</span></span>
<span class="line"><span>nvm off：关闭node.js版本管理</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="三、使用-nvm-切换其他-node-版本后发现-npm-命令不可用" tabindex="-1">三、使用 nvm 切换其他 node 版本后发现 npm 命令不可用 <a class="header-anchor" href="#三、使用-nvm-切换其他-node-版本后发现-npm-命令不可用" aria-label="Permalink to &quot;三、使用 nvm 切换其他 node 版本后发现 npm 命令不可用&quot;">​</a></h2><h3 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h3><p>使用<code>nvm</code>切换其他 <code>node</code> 版本后发现<code>npm</code>命令不可用</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不是内部或外部命令，也不是可运行的程序或批处理文件。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>找到磁盘下 <code>nvm</code> 的安装目录，会发现不存在的 <code>node</code> 版本的文件下面的 <code>node_modules</code> 文件夹为空。</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><p>从 Node.js 官网下载对应版本的压缩包，也就是将解压后的所有内容原封不动的拷贝到 <code>NVM</code> 目录下对应 <code>Node.js</code> 安装目录中的 <code>node_modules</code> 目录中</p><p>可以看一下生效 node 版本的 <code>node_modules</code> 目录结构是什么样的，把下载好的 node 版本复制到缺少文件的下面；</p><p><strong>node 的历史版本链接：</strong> <a href="https://nodejs.org/download/release/" target="_blank" rel="noreferrer">https://nodejs.org/download/release/</a></p><p>正常情况下的 node_modules 目录结构如下：</p><p><strong>图一：</strong></p><p><img src="`+d+'" alt="" width="80%" loading="lazy"></p><p><strong>图二：</strong></p><p><img src="'+c+'" alt="" width="80%" loading="lazy"></p>',44)])])}const j=n(m,[["render",u]]);export{y as __pageData,j as default};
