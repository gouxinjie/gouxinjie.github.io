import{_ as e,C as n,c as t,o as l,j as a,G as p,aQ as r,a as h}from"./chunks/framework.DEi4YP2n.js";const b=JSON.parse('{"title":"vue3 项目部署完成后静态文件 404 找不到","description":"","frontmatter":{},"headers":[],"relativePath":"column/ProblemNotes/踩坑记录/项目部署完成静态文件404.md","filePath":"column/ProblemNotes/踩坑记录/项目部署完成静态文件404.md","lastUpdated":1757667778000}'),o={name:"column/ProblemNotes/踩坑记录/项目部署完成静态文件404.md"};function d(k,s,c,E,u,m){const i=n("ArticleMetadata");return l(),t("div",null,[s[0]||(s[0]=a("h1",{id:"vue3-项目部署完成后静态文件-404-找不到",tabindex:"-1"},[h("vue3 项目部署完成后静态文件 404 找不到 "),a("a",{class:"header-anchor",href:"#vue3-项目部署完成后静态文件-404-找不到","aria-label":'Permalink to "vue3 项目部署完成后静态文件 404 找不到"'},"​")],-1)),p(i),s[1]||(s[1]=r(`<h2 id="_1、问题描述" tabindex="-1">1、问题描述 <a class="header-anchor" href="#_1、问题描述" aria-label="Permalink to &quot;1、问题描述&quot;">​</a></h2><p><code>vue3</code> 项目部署完成后静态文件 <code>404</code> 找不到，导致页面上的一些图片无法正常显示。</p><h2 id="_2、错误的使用方式" tabindex="-1">2、错误的使用方式 <a class="header-anchor" href="#_2、错误的使用方式" aria-label="Permalink to &quot;2、错误的使用方式&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imgList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;中文语音语义专家&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    banner: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/src/assets/images/home/1.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [!code warning]</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 错误的使用方式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bgcolor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#2840a5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;全语言的语感训练模型&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    banner: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/src/assets/images/home/2.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [!code warning]</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //   错误的使用方式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bgcolor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#284aa9&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>这种方式在本地调试时可以正常显示，但是在部署到服务器后就会出现 banner 图片 404 错误。</p><h2 id="_3、解决方案" tabindex="-1">3、解决方案 <a class="header-anchor" href="#_3、解决方案" aria-label="Permalink to &quot;3、解决方案&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">banner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/src/assets/images/home/1.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.url).href,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在图片路径前面添加<code> new URL()</code>方法，将图片的相对路径转换为绝对路径。而<code>import.meta.url</code>返回当前模块的 URL 路径。</p><blockquote><p>举例来说，当前模块主文件的路径是 <a href="https://foo.com/main.js%EF%BC%8C" target="_blank" rel="noreferrer">https://foo.com/main.js，</a> <code>import.meta.url</code>就返回这个路径。如果模块里面还有一个数据文件 data.txt，那么就可以用下面的代码，获取这个数据文件的路径。</p></blockquote><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>new URL(&#39;data.txt&#39;, import.meta.url)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">注意</p><p><code>Node.js</code> 环境中，<code>import.meta.url</code>返回的总是本地路径，即是<code>file:URL</code>协议的字符串，比如<code>file:///home/user/foo.js</code></p></div><p>详细请看 vite 官网的描述：<a href="https://cn.vitejs.dev/guide/assets.html" target="_blank" rel="noreferrer">https://cn.vitejs.dev/guide/assets.html</a></p>`,12))])}const y=e(o,[["render",d]]);export{b as __pageData,y as default};
