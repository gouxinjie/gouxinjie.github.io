import{_ as n,a as l,b as p}from"./chunks/nginx-2.Cgx5jZ6B.js";import{_ as e,C as t,c as h,o as r,j as i,G as k,aQ as d,a as c}from"./chunks/framework.DEi4YP2n.js";const g="/assets/nginx-3.BQQ7GqM_.png",o="/assets/nginx-4.GQJ78rix.png",E="/assets/nginx-5.B-J2EHQ1.png",b="/assets/nginx-6.CbhhsLwZ.png",C=JSON.parse('{"title":"使用 nginx 部署 vue 项目到本地以及代理","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/Nginx/部署项目和代理.md","filePath":"column/Network/Nginx/部署项目和代理.md","lastUpdated":1759201926000}'),u={name:"column/Network/Nginx/部署项目和代理.md"};function y(m,s,F,x,_,v){const a=t("ArticleMetadata");return r(),h("div",null,[s[0]||(s[0]=i("h1",{id:"使用-nginx-部署-vue-项目到本地以及代理",tabindex:"-1"},[c("使用 nginx 部署 vue 项目到本地以及代理 "),i("a",{class:"header-anchor",href:"#使用-nginx-部署-vue-项目到本地以及代理","aria-label":'Permalink to "使用 nginx 部署 vue 项目到本地以及代理"'},"​")],-1)),k(a),s[1]||(s[1]=d('<nav class="table-of-contents"><ul><li><a href="#_1-先安装-nginx">1，先安装 nginx</a></li><li><a href="#_2-打包-vue-项目">2，打包 vue 项目</a></li><li><a href="#_3-修改-nginx-配置文件">3，修改 nginx 配置文件</a><ul><li><a href="#_3-1-先进入到-nginx-conf-里面">3.1 先进入到 nginx.conf 里面</a></li><li><a href="#_3-2-添加-nginx-conf-路径监听">3.2 添加 nginx.conf 路径监听</a></li><li><a href="#_3-3-设置反向代理和负载均衡">3.3 设置反向代理和负载均衡</a></li></ul></li><li><a href="#_4-重启-nginx">4，重启 nginx</a></li><li><a href="#_5-重新访问项目路径">5，重新访问项目路径</a></li></ul></nav><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>介绍本篇介绍打包后的 vue 项目使用 nginx 部署到本地以及接口的反向代理和负载均衡；<br> 前提：准备一个打包后的 vue 项目和安装 nginx;</p></div><h2 id="_1-先安装-nginx" tabindex="-1">1，先安装 nginx <a class="header-anchor" href="#_1-先安装-nginx" aria-label="Permalink to &quot;1，先安装 nginx&quot;">​</a></h2><p>下载链接：<a href="http://nginx.org/en/download.html" target="_blank" rel="noreferrer">http://nginx.org/en/download.html</a></p><p>我安装的是：<code>1.16.1 </code>版本的，如下：</p><p><img src="'+n+'" alt="在这里插入图片描述" width="70%" loading="lazy"></p><p><strong>然后解压到一个指定的文件夹就行；双击根目录的 nginx 图标</strong> ，然后再访问 <a href="http://localhost/" target="_blank" rel="noreferrer">http://localhost/</a>若出现以下页面表示启动成功：</p><p><img src="'+l+'" alt="在这里插入图片描述" width="70%" loading="lazy"></p><p><strong>也可以在任务管理器中查看是否启动成功:</strong></p><p><img src="'+p+`" alt="在这里插入图片描述" width="70%" loading="lazy"></p><h2 id="_2-打包-vue-项目" tabindex="-1">2，打包 vue 项目 <a class="header-anchor" href="#_2-打包-vue-项目" aria-label="Permalink to &quot;2，打包 vue 项目&quot;">​</a></h2><p>在 vue 项目根目录的 vue.config.js 文件配置 publicPath 路径；如下：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  outputDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//打包后的文件夹名字及路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  publicPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/video/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生产的项目名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lintOnSave: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>然后运行 <code>npm run build</code> 打包完成；打包后的就是根目录下的 video 文件；</p><p><img src="`+g+'" alt="在这里插入图片描述" loading="lazy"></p><h2 id="_3-修改-nginx-配置文件" tabindex="-1">3，修改 nginx 配置文件 <a class="header-anchor" href="#_3-修改-nginx-配置文件" aria-label="Permalink to &quot;3，修改 nginx 配置文件&quot;">​</a></h2><blockquote><p>此步需要进入到 nginx 的 conf/nginx.conf 下面新增一个 <code>路径监听</code>，这个路径对应的就是 vue 项目打包后存放的本地的绝对路径，如下：</p></blockquote><h3 id="_3-1-先进入到-nginx-conf-里面" tabindex="-1">3.1 先进入到 nginx.conf 里面 <a class="header-anchor" href="#_3-1-先进入到-nginx-conf-里面" aria-label="Permalink to &quot;3.1 先进入到 nginx.conf 里面&quot;">​</a></h3><p><img src="'+o+'" alt="在这里插入图片描述" loading="lazy"></p><h3 id="_3-2-添加-nginx-conf-路径监听" tabindex="-1">3.2 添加 nginx.conf 路径监听 <a class="header-anchor" href="#_3-2-添加-nginx-conf-路径监听" aria-label="Permalink to &quot;3.2 添加 nginx.conf 路径监听&quot;">​</a></h3><p>在配置文件里面加入我画红线的内容；<code>alias</code> 对应的就是本地打包后的项目文件夹存放的本地路径；</p><div class="warning custom-block"><p class="custom-block-title">注意！</p><p>location /video/ 这个<code>nginx</code>映射路径一定要对应 ：</p><p><code>vue</code> 2项目的 <code>publicPath : &quot;/video/&quot;</code> 或者<br><code>vite</code> 项目的<code> base: &quot;/video/&quot;</code></p><p>末尾一定要加 <code>/</code></p></div><p>一旦映射错误，报下面错误：</p><div class="danger custom-block"><p class="custom-block-title">错误提示！</p><p>Failed to load module script: Expected a JavaScript-or-Wasm module script but the server responded with a MIME type of &quot;text/html&quot;. Strict MIME type checking is enforced for module scripts per HTML spec.</p></div><p><img src="'+E+`" alt="在这里插入图片描述" width="70%" loading="lazy"></p><p>配置如下：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 视频演示项目 http协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /video/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    alias </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D:/myProject/deployProject/video/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_3-3-设置反向代理和负载均衡" tabindex="-1">3.3 设置反向代理和负载均衡 <a class="header-anchor" href="#_3-3-设置反向代理和负载均衡" aria-label="Permalink to &quot;3.3 设置反向代理和负载均衡&quot;">​</a></h3><p>如果你部署的里面有接口的请求，那么需要设置反向代理和负载均衡，请好好的看下面案例：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> serve_backend </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	ip_hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.68:20201;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.69:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> down;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.70:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	server 192.168.11.71:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> backup;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.72:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max_fails=3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fail_timeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">配置说明</p><ol><li><strong>down：</strong> 表示当前的 server 暂时不参与负载</li><li><strong>weight：</strong> 默认为 1.weight 越大，负载的权重就越大</li><li><strong>backup：</strong> 其它所有的非 backup 机器 down 或者忙的时候，请求 backup 机器。所以这台机器压力会最轻</li><li>上例中 192.168.11.72:20201 设置最大失败次数为 3，也就是最多进行 3 次尝试，且超时时间为 30 秒；（max_fails 的默认值为 1，fail_timeout 的默认值是 10s。）</li><li>注意，当<strong>upstream</strong>中只有一个<strong>server</strong> 时，max_fails 和 fail_timeout 参数可能不会起作用； weight\\backup 不能和 ip_hash 关键字一起使用。</li><li>最后在需要使用负载均衡的 server 中增加 proxy_pass http://serve_backend/，对应 upstream 的名字。</li><li>nginx.conf 的 serve 模块配置如下：</li></ol></div><p>nginx.conf 的 serve 模块配置如下：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mime.types;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application/octet-stream;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #tcp_nopush     on;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #keepalive_timeout  0;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    keepalive_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #gzip  on;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 在这里 设置负载均衡</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 上面有讲解</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> serve_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		ip_hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.68:20201;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.69:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> down;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.70:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		server 192.168.11.71:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> backup;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.11.72:20201 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max_fails=3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fail_timeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        listen       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localhost;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 视频演示项目 http协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /video/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            alias </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D:/myProject/deployProject/video/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 在这里设置反向代理</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # wxserver 是需要代理的标志</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /wxserver/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://serve_backend/;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 启用keep alive</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Connection </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 获取 xforward和真实IP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X-Forwarded-For  $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X-Real-IP  $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Host $host;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        #error_page  404              /404.html;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        #</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        error_page </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 502</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 503</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 504</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /50x.html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> /50x.html </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h2 id="_4-重启-nginx" tabindex="-1">4，重启 nginx <a class="header-anchor" href="#_4-重启-nginx" aria-label="Permalink to &quot;4，重启 nginx&quot;">​</a></h2><p>上面如果没有涉及到接口的请求，就不用设置<code>第3.3步骤</code>了；设置完成后需要到任务管理器结束掉所有的 nginx 进程，然后进入到 nginx 根目录下 双击 nginx 图标，重新启动 nginx;</p><h2 id="_5-重新访问项目路径" tabindex="-1">5，重新访问项目路径 <a class="header-anchor" href="#_5-重新访问项目路径" aria-label="Permalink to &quot;5，重新访问项目路径&quot;">​</a></h2><p>然后再重新访问本地项目路径：<code>http://localhost/video/login</code> ; <code>/video</code>是 nginx 代理到本地的映射，一定要有 <code>/login</code> 是你 vue 项目的入口路由 ，一定要有后面就进入到你的项目了，使用的接口也是代理过的。</p><p>如下：部署成功；</p><p><img src="`+b+'" alt="在这里插入图片描述" loading="lazy"></p>',39))])}const f=e(u,[["render",y]]);export{C as __pageData,f as default};
