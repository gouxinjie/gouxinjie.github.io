import{_ as e,C as d,c as r,o as s,j as o,G as p,aQ as n,a as c}from"./chunks/framework.DEi4YP2n.js";const i="/assets/OSI-1.10n7Vfd0.png",l="/assets/OSI-2.1ildY0QY.png",h="/assets/OSi-3.DLcuFn0p.png",g="/assets/OSI-4.BBF_2POP.png",_="/assets/OSI-5.DvlkPsrM.png",P="/assets/OSI-6.BEm6pxod.png",S="/assets/OSI-7.D1sDLxQ3.png",k=JSON.parse('{"title":"OSI 七层网络模型","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/网络基础/OSI七层网络模型.md","filePath":"column/Network/网络基础/OSI七层网络模型.md","lastUpdated":1757766995000}'),m={name:"column/Network/网络基础/OSI七层网络模型.md"};function b(u,t,I,T,f,O){const a=d("ArticleMetadata");return s(),r("div",null,[t[0]||(t[0]=o("h1",{id:"osi-七层网络模型",tabindex:"-1"},[c("OSI 七层网络模型 "),o("a",{class:"header-anchor",href:"#osi-七层网络模型","aria-label":'Permalink to "OSI 七层网络模型"'},"​")],-1)),p(a),t[1]||(t[1]=n('<p><strong>目录</strong></p><nav class="table-of-contents"><ul><li><a href="#什么是-osi-七层模型">什么是 OSI 七层模型？</a></li><li><a href="#_1-物理层">1. 物理层</a><ul><li><a href="#_1-1-有线通道">1.1 有线通道</a></li><li><a href="#_1-2-无线通道">1.2 无线通道</a></li></ul></li><li><a href="#_2-数据链路层">2. 数据链路层</a></li><li><a href="#_3-网络层">3. 网络层</a></li><li><a href="#_4-传输层">4. 传输层</a></li><li><a href="#_5-会话层">5. 会话层</a></li><li><a href="#_6-表示层">6. 表示层</a></li><li><a href="#_7-应用层">7. 应用层</a></li></ul></nav><h2 id="什么是-osi-七层模型" tabindex="-1">什么是 OSI 七层模型？ <a class="header-anchor" href="#什么是-osi-七层模型" aria-label="Permalink to &quot;什么是 OSI 七层模型？&quot;">​</a></h2><p><code>OSI</code>（<code>Open Systems Interconnection</code>，开放系统互连）模型是由国际标准化组织（<code>ISO</code>）提出的一个网络通信框架，用于标准化不同厂商设备之间的通信流程。它将网络通信划分为七层，每一层负责特定的功能，并通过接口与上下层交互。</p><p>下面是 <code>OSI </code>模型的七个层级：</p><table tabindex="0"><thead><tr><th><strong>层数</strong></th><th><strong>名称</strong></th><th><strong>主要功能</strong></th><th><strong>典型协议</strong></th><th><strong>相关设备</strong></th></tr></thead><tbody><tr><td><strong>7</strong></td><td><strong>应用层</strong></td><td>提供用户接口，支持网络应用服务</td><td>HTTP、FTP、SMTP、DNS</td><td>网关、代理服务器</td></tr><tr><td><strong>6</strong></td><td><strong>表示层</strong></td><td>数据格式转换、加密解密、压缩解压</td><td>SSL/TLS、JPEG、ASCII</td><td>-</td></tr><tr><td><strong>5</strong></td><td><strong>会话层</strong></td><td>建立、管理、终止应用会话</td><td>NetBIOS、RPC、SSH</td><td>-</td></tr><tr><td><strong>4</strong></td><td><strong>传输层</strong></td><td>提供端到端可靠/不可靠数据传输</td><td>TCP、UDP</td><td>防火墙、负载均衡器</td></tr><tr><td><strong>3</strong></td><td><strong>网络层</strong></td><td>逻辑寻址、路由选择、分组转发</td><td>IP、ICMP、ARP、OSPF</td><td>路由器、三层交换机</td></tr><tr><td><strong>2</strong></td><td><strong>数据链路层</strong></td><td>物理寻址（MAC）、帧同步、差错控制</td><td>Ethernet、PPP、VLAN</td><td>交换机、网桥</td></tr><tr><td><strong>1</strong></td><td><strong>物理层</strong></td><td>传输原始比特流，定义电气/机械特性</td><td>RS-232、光纤、Wi-Fi</td><td>网卡、集线器、中继器</td></tr></tbody></table><h2 id="_1-物理层" tabindex="-1">1. 物理层 <a class="header-anchor" href="#_1-物理层" aria-label="Permalink to &quot;1. 物理层&quot;">​</a></h2><p>物理层是直接和物理介质打交道的。</p><p>物理层的设备 网卡，网线，集线器，中继器，调制解调器。负责传输原始比特流（0 和 1 的电信号/光信号）。</p><p>分为有线通道和无线通道：</p><h3 id="_1-1-有线通道" tabindex="-1">1.1 有线通道 <a class="header-anchor" href="#_1-1-有线通道" aria-label="Permalink to &quot;1.1 有线通道&quot;">​</a></h3><p>有线通道是指通过物理介质（如网线、光纤等）进行数据传输的通道。</p><p><code>明线</code></p><p>明线是指平行架设在电线杆上的架空线路。它本身是导电裸线或带绝缘层的导线。虽然它的传输损耗低，但是由于易受天气和环境的影响，对外界噪声干扰比较敏感，已经逐渐被电缆取代。</p><p><img src="'+i+'" alt="明线" width="50%" loading="lazy"></p><p><code>对称电缆</code></p><p>对称电缆是由多对双绞线组成的线缆。</p><p><img src="'+l+'" alt="对称电缆" width="60%" loading="lazy"></p><p><code>同轴电缆</code></p><p>同轴线缆的应用范围极为广泛，同轴电缆能以低损耗的方式传输模拟信号和数字信号，适用于各种应用，其中常见的有电视广播系统、长途电话传输系统、计算机系统之间的短距离跳线以及局域网互联等。</p><p><img src="'+h+'" alt="同轴电缆" width="60%" loading="lazy"></p><p><code>光纤</code></p><p>光导纤维是由玻璃或塑料制成的纤维，利用光在这些纤维中以全反射原理传输的光传导工具（全反射现象是光的折射的特殊现象，只有光从光密介质射向光疏介质并且入射角大于等于临界角时全反射 现象才会发生）</p><p><img src="'+g+'" alt="光纤" width="60%" loading="lazy"></p><h3 id="_1-2-无线通道" tabindex="-1">1.2 无线通道 <a class="header-anchor" href="#_1-2-无线通道" aria-label="Permalink to &quot;1.2 无线通道&quot;">​</a></h3><p>无线通道是指通过无线信号进行数据传输的通道。</p><p>以辐射无线电波为传输方式无线信道主要有地波传输，天波传输和视距传输 例如：卫星通讯，电台广播。</p><p><img src="'+_+'" alt="无线通道" width="60%" loading="lazy"></p><h2 id="_2-数据链路层" tabindex="-1">2. 数据链路层 <a class="header-anchor" href="#_2-数据链路层" aria-label="Permalink to &quot;2. 数据链路层&quot;">​</a></h2><p>建立逻辑连接、进行硬件地址寻址、差错校验等功能。（由底层网络定义协议）。</p><p>将比特组合成字节进而组合成帧，用 MAC 地址访问介质，错误发现但不能纠正。</p><p><code>MAC地址</code>：每个网卡的唯一标识.</p><p><img src="'+P+'" alt="无线MAC地址通道" width="100%" loading="lazy"></p><p>有了<code>Mac</code>地址之后就可以知道谁是接收者，谁是发送者，并且知道了数据的内容并且进行了分组。那么他如何进行传播数据，他是进行广播的方式进行传输,在局域网内所有的计算机都能收到消息</p><h2 id="_3-网络层" tabindex="-1">3. 网络层 <a class="header-anchor" href="#_3-网络层" aria-label="Permalink to &quot;3. 网络层&quot;">​</a></h2><p><code>网络层</code>是最复杂的一层，在这一层就定义了我们的<code>IP</code>，例如 <code>10.170.112.11</code>。</p><p>该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备。</p><p>1.寻址：对网络层而言使用 <code>IP</code> 地址来唯一标识互联网上的设备，网络层依靠 <code>IP</code> 地址进行相互通信（类似于数据链路层的 MAC 地址）<br></p><p>2.路由：在同一个网络中的内部通信并不需要网络层设备，仅仅靠数据链路层就可以完成相互通信，对于不同的网络之间相互通信则必须借助路由器等三层设备。<br></p><p>我们的<code>路由器</code>就是在第三层工作的</p><p><img src="'+S+'" alt="路由器" width="70%" loading="lazy"></p><p>在数据链路层的时候说过了如果所有的使用互联网的用户在同一个网段中，会产生广播风暴，所以要将用户进行划分，让他们在不同的网段中，自己在自己的小网段中广播。而互联网就是这无数的子网络构成的一个巨型网络。</p><p>在网络层中引入了一套新的地址，让我们能够区分不同的网段。这套地址就叫做“网络地址”，简称“网址”。 于是，”网络层”出现以后，每台计算机有了两种地址，一种是MAC地址，另一种是网络地址。两种地址之间没有任何联系，MAC地址是绑定在网卡上的，网络地址则是管理员分配的，它们只是随机组合在一起。</p><p>网络地址帮助我们确定计算机所在的子网络，MAC地址则将数据包送到该子网络中的目标网卡。因此，从逻辑上可以推断，必定是先处理网络地址，然后再处理MAC地址。</p><p>这一层中有一个规定网络地址的协议，叫做IP协议，它所定义的地址，就被称为IP地址。目前，广泛采用的是IP协议第四版，简称IPv4。这个版本规定，网络地址由32个二进制位组成。因为IPv4的地址已经不够用了，所以现在推广IPv6。</p><h2 id="_4-传输层" tabindex="-1">4. 传输层 <a class="header-anchor" href="#_4-传输层" aria-label="Permalink to &quot;4. 传输层&quot;">​</a></h2><p>传输层主要就是定义我们的端口号，以及控流，和校验。并且拥有两个熟知的协议 <code>TCP</code>、<code> UDP</code>。</p><div class="tip custom-block github-alert"><p class="custom-block-title">TCP</p><p><code>TCP</code> 是面向连接的协议并且TCP是可靠的。 因为TCP会进行三次握手四次挥手所以是可靠的，但是这样会降低速度。</p></div><div class="tip custom-block github-alert"><p class="custom-block-title">UDP</p><p><code>UDP</code> 具有较好的实时性 效率比TCP高 UDP是没有三次握手四次挥手的，故此不稳定，但是速度快 常用于直播，游戏。</p></div><h2 id="_5-会话层" tabindex="-1">5. 会话层 <a class="header-anchor" href="#_5-会话层" aria-label="Permalink to &quot;5. 会话层&quot;">​</a></h2><p>会话层，是在发送方和接收方之间进行通信时创建、维持、之后终止或断开连接的地方，与电话通话有点相似。</p><p>会话层定义了一种机制，允许发送方和接收方启动或停止请求会话，以及当双方发生拥塞时仍然能保持对话。 会话层包含了一种称为检查点（<code>Checkpoint</code>） 的机制来维持可靠会话。</p><p>检查点定义了一个最接近成功通信的点，并且定义了当发生内容丢失或损坏时需要回滚以便恢复丢失或损坏数据的点，即断点下载的原理。</p><h2 id="_6-表示层" tabindex="-1">6. 表示层 <a class="header-anchor" href="#_6-表示层" aria-label="Permalink to &quot;6. 表示层&quot;">​</a></h2><p>表示层主要做了几件重要的事情 安全，压缩，也是程序在网络中的一个翻译官。</p><p>1.安全 在你的数据发送之前进行加密，在接受者的表示层进行解密。</p><p>2.表示层还会对图片文件等格式进行解码和编码 例如 JPEG、ASCll 图片是人类能读懂的计算机需要转换成计算机能读懂的编码。</p><p><strong>核心功能</strong><br> 1、数据格式转换：如JSON ↔ 二进制。<br> 2、加密/解密：SSL/TLS保护数据传输。<br> 3、压缩/解压缩：减少数据量（如GZIP）。<br></p><p><strong>实际案例</strong><br> 1、HTTPS：表示层对HTTP数据加密。<br> 2、JPEG图片：图像数据压缩后传输。<br></p><h2 id="_7-应用层" tabindex="-1">7. 应用层 <a class="header-anchor" href="#_7-应用层" aria-label="Permalink to &quot;7. 应用层&quot;">​</a></h2><p>应用层就是我们使用最多的一层，例如<code>ajax</code>调用接口发送<code>http</code>请求，再比如域名系统<code>DNS</code>，邮件协议<code>SMTP</code>，<code>webSocket</code>长连接，<code>SSH</code>协议。</p><p>直接面向用户，提供网络服务接口。不同协议对应不同服务（如HTTP→网页，SMTP→邮件）。</p><p><strong>典型协议</strong></p><p>1、HTTP 网页浏览 2、FTP 文件传输 3、DNS 域名解析 4、SMTP 发送电子邮件</p>',64))])}const q=e(m,[["render",b]]);export{k as __pageData,q as default};
