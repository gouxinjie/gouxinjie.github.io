import{_ as d,C as a,c as n,o,j as e,G as i,aQ as p,a as r}from"./chunks/framework.DEi4YP2n.js";const c="/assets/package-1.Cwozgxci.png",E=JSON.parse('{"title":"npm 和 package.json 文件完全解析","description":"","frontmatter":{},"headers":[],"relativePath":"column/Node/基础/npm package.json.md","filePath":"column/Node/基础/npm package.json.md","lastUpdated":1758186582000}'),l={name:"column/Node/基础/npm package.json.md"};function h(u,t,g,k,m,b){const s=a("ArticleMetadata");return o(),n("div",null,[t[0]||(t[0]=e("h1",{id:"npm-和-package-json-文件完全解析",tabindex:"-1"},[r("npm 和 package.json 文件完全解析 "),e("a",{class:"header-anchor",href:"#npm-和-package-json-文件完全解析","aria-label":'Permalink to "npm 和 package.json 文件完全解析"'},"​")],-1)),i(s),t[1]||(t[1]=p('<h2 id="一、npm" tabindex="-1">一、npm <a class="header-anchor" href="#一、npm" aria-label="Permalink to &quot;一、npm&quot;">​</a></h2><p><code>npm（全称 Node Package Manager）是 Node.js 的包管理工具</code>，它是一个基于命令行的工具，用于帮助开发者在自己的项目中安装、升级、移除和管理依赖项。</p><p><a href="https://www.npmjs.com/" target="_blank">npm</a></p><p>1、类似于 <code>PHP</code> 的工具：<code>Composer</code>。它是 PHP 的包管理器，可以用于下载、安装和管理 PHP 的依赖项，类似于 npm。<br> 2、类似于 <code>Java</code> 的工具：<code>Maven</code>。它是 Java 的构建工具和项目管理工具，可以自动化构建、测试和部署 Java 应用程序，类似于 npm 和 webpack 的功能。<br> 3、类似于 <code>Pyth</code>on 的工具：<code>pip</code>。它是 Python 的包管理器，可以用于安装和管理 Python 的依赖项，类似于 npm。<br> 4、类似于 <code>Rust</code> 的工具：<code>Cargo</code>。它是 Rust 的包管理器和构建工具，可以用于下载、编译和管理 Rust 的依赖项，类似于 npm 和 Maven 的功能。</p><p>以下是简化后的 npm 常用命令分类表格：</p><h3 id="npm-常用命令速查表" tabindex="-1">npm 常用命令速查表 <a class="header-anchor" href="#npm-常用命令速查表" aria-label="Permalink to &quot;npm 常用命令速查表&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>分类</strong></th><th><strong>命令</strong></th><th><strong>作用描述</strong></th></tr></thead><tbody><tr><td><strong>项目初始化</strong></td><td><code>npm init</code></td><td>初始化项目并创建 package.json</td></tr><tr><td><strong>安装依赖</strong></td><td><code>npm install</code></td><td>安装 package.json 中的所有依赖</td></tr><tr><td></td><td><code>npm install &lt;package&gt;</code></td><td>安装指定包到 dependencies</td></tr><tr><td></td><td><code>npm install &lt;package&gt; --save-dev</code></td><td>安装到 devDependencies</td></tr><tr><td></td><td><code>npm install -g &lt;package&gt;</code></td><td>全局安装</td></tr><tr><td><strong>依赖管理</strong></td><td><code>npm update &lt;package&gt;</code></td><td>更新指定包</td></tr><tr><td></td><td><code>npm uninstall &lt;package&gt;</code></td><td>卸载包</td></tr><tr><td></td><td><code>npm outdated</code></td><td>检查过时的依赖</td></tr><tr><td></td><td><code>npm audit</code></td><td>检查依赖安全漏洞</td></tr><tr><td><strong>脚本执行</strong></td><td><code>npm run &lt;script&gt;</code></td><td>运行 package.json 中的脚本</td></tr><tr><td><strong>包搜索</strong></td><td><code>npm search &lt;keyword&gt;</code></td><td>搜索 npm 仓库</td></tr><tr><td></td><td><code>npm info &lt;package&gt;</code></td><td>查看包详细信息</td></tr><tr><td><strong>发布管理</strong></td><td><code>npm publish</code></td><td>发布包到 npm</td></tr><tr><td></td><td><code>npm login</code></td><td>登录 npm 账户</td></tr><tr><td></td><td><code>npm logout</code></td><td>注销当前账户</td></tr><tr><td><strong>配置管理</strong></td><td><code>npm config list</code></td><td>列出所有 npm 配置</td></tr><tr><td></td><td><code>npm get registry</code></td><td>查看当前镜像源地址</td></tr><tr><td></td><td><code>npm set registry &lt;url&gt;</code></td><td>设置镜像源地址</td></tr><tr><td><strong>高级操作</strong></td><td><code>npm link</code></td><td>将本地包链接到全局 node_modules</td></tr><tr><td></td><td><code>npm list</code></td><td>显示已安装的依赖树</td></tr></tbody></table><p><code>package.json</code> 是 <code>Node.js </code>项目的核心配置文件，它定义了项目的元数据、依赖项、脚本命令等重要信息。下面我将全面解析这个文件的各个部分。</p><h2 id="二、package-json" tabindex="-1">二、package.json <a class="header-anchor" href="#二、package-json" aria-label="Permalink to &quot;二、package.json&quot;">​</a></h2><p><img src="'+c+`" alt="" loading="lazy"></p><h3 id="_2-1-常用配置" tabindex="-1">2.1 常用配置 <a class="header-anchor" href="#_2-1-常用配置" aria-label="Permalink to &quot;2.1 常用配置&quot;">​</a></h3><p>以下是 <code>package.json</code> 主要字段的总结表格：</p><table tabindex="0"><thead><tr><th><strong>字段名</strong></th><th><strong>类型</strong></th><th><strong>作用描述</strong></th></tr></thead><tbody><tr><td><code>name</code></td><td>字符串</td><td>项目名称，必须唯一，推荐小写字母和连字符组合（如 <code>my-project</code>）</td></tr><tr><td><code>version</code></td><td>字符串</td><td>项目版本号，遵循语义化版本规范（如 <code>1.0.0</code>）</td></tr><tr><td><code>description</code></td><td>字符串</td><td>项目简短描述</td></tr><tr><td><code>main</code></td><td>字符串</td><td>项目主入口文件路径（如 <code>dist/index.js</code>）</td></tr><tr><td><code>keywords</code></td><td>字符串数组</td><td>项目关键词，用于 npm 搜索（如 <code>[&quot;vue&quot;, &quot;utility&quot;]</code>）</td></tr><tr><td><code>author</code></td><td>字符串/对象</td><td>作者信息（如 <code>&quot;John Doe &lt;john@example.com&gt;&quot;</code> 或 <code>{ &quot;name&quot;: &quot;...&quot;, &quot;email&quot;: &quot;...&quot; }</code>）</td></tr><tr><td><code>license</code></td><td>字符串</td><td>开源许可证类型（如 <code>MIT</code>、<code>Apache-2.0</code>）</td></tr><tr><td><code>dependencies</code></td><td>对象</td><td>生产环境依赖包列表（如 <code>{ &quot;react&quot;: &quot;^18.2.0&quot; }</code>）</td></tr><tr><td><code>devDependencies</code></td><td>对象</td><td>开发环境依赖包列表（如 <code>{ &quot;eslint&quot;: &quot;^8.0.0&quot; }</code>）</td></tr><tr><td><code>peerDependencies</code></td><td>对象</td><td>同级依赖，声明宿主环境需提供的包（如 <code>{ &quot;react&quot;: &quot;&gt;=16.8.0&quot; }</code>）</td></tr><tr><td><code>scripts</code></td><td>对象</td><td>可执行的 npm 脚本命令（如 <code>{ &quot;start&quot;: &quot;node app.js&quot; }</code>）</td></tr><tr><td><code>repository</code></td><td>对象</td><td>代码仓库信息（如 <code>{ &quot;type&quot;: &quot;git&quot;, &quot;url&quot;: &quot;https://github.com/user/repo&quot; }</code>）</td></tr><tr><td><code>bugs</code></td><td>对象/字符串</td><td>Bug 反馈地址（如 <code>{ &quot;url&quot;: &quot;https://github.com/user/repo/issues&quot; }</code>）</td></tr><tr><td><code>homepage</code></td><td>字符串</td><td>项目官网或文档地址（如 <code>&quot;https://example.com&quot;</code>）</td></tr></tbody></table><p><strong>补充说明：</strong></p><ol><li><strong>必填字段</strong>：<code>name</code> 和 <code>version</code> 是发布到 npm 时的必填字段</li><li><strong>版本语法</strong>： <ul><li><code>^1.2.3</code>：允许次版本号和修订号更新（如 1.2.3 → 1.9.0）</li><li><code>~1.2.3</code>：只允许修订号更新（如 1.2.3 → 1.2.9）</li></ul></li><li><strong>扩展字段</strong>： <ul><li><code>files</code>：控制发布到 npm 的文件白名单</li><li><code>engines</code>：指定 Node.js 或 npm 版本要求</li><li><code>private: true</code>：防止意外发布私有项目</li></ul></li></ol><p>需要补充其他字段（如 <code>types</code>、<code>module</code> 等 TypeScript/ESM 相关字段）吗？</p><h3 id="_2-2-dependencies-devdependencies" tabindex="-1">2.2 dependencies &amp; devDependencies <a class="header-anchor" href="#_2-2-dependencies-devdependencies" aria-label="Permalink to &quot;2.2 dependencies &amp; devDependencies&quot;">​</a></h3><table tabindex="0"><thead><tr><th>类型</th><th>说明</th><th>安装方式</th></tr></thead><tbody><tr><td><code>dependencies</code></td><td>生产依赖</td><td><code>npm install &lt;package&gt;</code></td></tr><tr><td><code>devDependencies</code></td><td>开发依赖</td><td><code>npm install &lt;package&gt; --save-dev</code></td></tr></tbody></table><p>示例：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^18.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;typescript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^4.9.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-3-engines-环境要求" tabindex="-1"><strong>2.3 engines - 环境要求</strong> <a class="header-anchor" href="#_2-3-engines-环境要求" aria-label="Permalink to &quot;**2.3 engines - 环境要求**&quot;">​</a></h3><p>指定 Node.js 和 npm 的版本要求：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;engines&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt;=16.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;npm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt;=8.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-4-repository-代码仓库" tabindex="-1"><strong>2.4 repository - 代码仓库</strong> <a class="header-anchor" href="#_2-4-repository-代码仓库" aria-label="Permalink to &quot;**2.4 repository - 代码仓库**&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;repository&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;git&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/user/repo.git&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-5-config-自定义配置" tabindex="-1"><strong>2.5 config - 自定义配置</strong> <a class="header-anchor" href="#_2-5-config-自定义配置" aria-label="Permalink to &quot;**2.5 config - 自定义配置**&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;port&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>可通过 <code>process.env.npm_package_config_port</code> 访问</p>`,28))])}const y=d(l,[["render",h]]);export{E as __pageData,y as default};
