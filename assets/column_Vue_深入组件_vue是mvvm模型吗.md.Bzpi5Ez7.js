import{_ as n,C as t,c as o,o as p,j as a,G as l,aQ as r,a as i}from"./chunks/framework.DEi4YP2n.js";const d="/assets/mvvm.Iob_fp-9.png",c="/assets/mvvm-1.BrixnrAQ.png",m="/assets/mvvm-2.BF7LWCBy.png",f=JSON.parse('{"title":"vue 是 mvvm 模型吗","description":"","frontmatter":{},"headers":[],"relativePath":"column/Vue/深入组件/vue是mvvm模型吗.md","filePath":"column/Vue/深入组件/vue是mvvm模型吗.md","lastUpdated":1758527591000}'),v={name:"column/Vue/深入组件/vue是mvvm模型吗.md"};function u(V,e,_,g,M,h){const s=t("ArticleMetadata");return p(),o("div",null,[e[0]||(e[0]=a("h1",{id:"vue-是-mvvm-模型吗",tabindex:"-1"},[i("vue 是 mvvm 模型吗 "),a("a",{class:"header-anchor",href:"#vue-是-mvvm-模型吗","aria-label":'Permalink to "vue 是 mvvm 模型吗"'},"​")],-1)),l(s),e[1]||(e[1]=r('<h2 id="_1-什么是-mvvm-模型" tabindex="-1">1.什么是 mvvm 模型？ <a class="header-anchor" href="#_1-什么是-mvvm-模型" aria-label="Permalink to &quot;1.什么是 mvvm 模型？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">标准的 mvvm 模型</p><ul><li><strong>M</strong>: Model；既是数据，主要负责业务数据相关；</li><li><strong>V</strong>: View；即是视图，展示给用户看的页面，细分下来就是 html+css 层；</li><li><strong>VM</strong>: ViewModel；是连接界面 View 和数据 Model 桥梁，负责监听 M 或者 V 的修改，是实现 MVVM 双向绑定的核心；</li></ul></div><p>图解见下图：</p><p><img src="'+d+'" alt="在这里插入图片描述" width="500px" loading="lazy"></p><p>下面我们看一下使用<code>vue</code>的一个简单示例：</p><h2 id="_2-vue-的文件结构" tabindex="-1">2.vue 的文件结构 <a class="header-anchor" href="#_2-vue-的文件结构" aria-label="Permalink to &quot;2.vue 的文件结构&quot;">​</a></h2><p><img src="'+c+`" alt="在这里插入图片描述" width="90%" loading="lazy"></p><p>由上图可知：<code>MVVMM</code>设计模型和<code>Vue</code>的设计会有以下对应关系：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Vue中的data &lt;====&gt;  MVVM模型中Model</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Vue中的template &lt;====&gt;   MVVM模型中View</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Vue中的new Vue实例 &lt;====&gt;   MVVM模型中ViewModel</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>实现 mvvm 主要包含两个方面：数据变化更新视图，视图变化更新数据</strong></p><p><code>视图变化更新数据</code>： 可以利用 v-model 指令，也可以用户手动输入监听@input 事件来实现，更改数据;</p><p><code>数据变化更新视图</code>：Model 变更触发 View 更新必须通过 VewModel (Vue 实例),当<code>Object.defineProperty()</code>数据劫持中的<code>set</code>方法触发时会通知 render 函数进行异步更新视图；</p><p>以上是 MVVM 的思想。</p><p><strong>当然，</strong> Vue 也是按照这样的设计的，但是 vue 中添加了一个属性<code>ref</code>，通过<code>this.$ref</code>可以直接获取 dom 节点对象，通过 ref 直接去操作视图。</p><p>这一点上，违背了<code>MVVM</code>模型，所以说 vue 并没有完全遵循<code>MVVM</code>模型。</p><p>放一张<a href="https://v2.cn.vuejs.org/v2/guide/instance.html" target="_blank" rel="noreferrer">官网的说明图</a></p><p><img src="`+m+'" alt="在这里插入图片描述" width="90%" loading="lazy"></p><p><strong>总结：vue 并虽然没有完全遵循 MVVM 模型，但也是属于 MVVM 模型的</strong></p>',18))])}const w=n(v,[["render",u]]);export{f as __pageData,w as default};
