import{_ as n,C as l,c as e,o as t,j as a,G as h,aQ as p,a as k}from"./chunks/framework.DEi4YP2n.js";const r="/assets/shallowReadonly-1.HPWkITSE.gif",F=JSON.parse('{"title":"shallowReadonly：浅层只读响应式对象","description":"","frontmatter":{},"headers":[],"relativePath":"column/Vue/响应式API进阶/shallowReadonly.md","filePath":"column/Vue/响应式API进阶/shallowReadonly.md","lastUpdated":1759995509000}'),d={name:"column/Vue/响应式API进阶/shallowReadonly.md"};function E(o,s,y,g,c,u){const i=l("ArticleMetadata");return t(),e("div",null,[s[0]||(s[0]=a("h1",{id:"shallowreadonly-浅层只读响应式对象",tabindex:"-1"},[k("shallowReadonly：浅层只读响应式对象 "),a("a",{class:"header-anchor",href:"#shallowreadonly-浅层只读响应式对象","aria-label":'Permalink to "shallowReadonly：浅层只读响应式对象"'},"​")],-1)),h(i),s[1]||(s[1]=p(`<nav class="table-of-contents"><ul><li><a href="#_1-shallowreadonly-的作用">1. shallowReadonly 的作用</a></li><li><a href="#_2-基本用法">2. 基本用法</a></li><li><a href="#_3-shallowreadonly-与-readonly-的区别">3. shallowReadonly 与 readonly 的区别</a></li><li><a href="#_4-使用场景">4. 使用场景</a></li><li><a href="#_5-与-readonly-对比示例">5. 与 readonly 对比示例</a></li></ul></nav><p>在 <strong>Vue 3</strong> 中，<code>shallowReadonly</code> 是一个用于创建 <strong>浅层只读响应式对象</strong> 的 API，它与 <code>readonly</code> 类似，但有一个重要区别：<strong>它只会让顶层属性只读，而不会递归地把嵌套对象也变成只读</strong>。</p><p>下面我详细讲解 <code>shallowReadonly</code> 的作用、用法，以及与 <code>readonly</code> 的区别。</p><h2 id="_1-shallowreadonly-的作用" tabindex="-1">1. <code>shallowReadonly</code> 的作用 <a class="header-anchor" href="#_1-shallowreadonly-的作用" aria-label="Permalink to &quot;1. \`shallowReadonly\` 的作用&quot;">​</a></h2><ul><li>将对象转换为 <strong>只读响应式对象</strong>。</li><li><strong>只对顶层属性只读</strong>，嵌套对象仍然可以被修改。</li><li>适合只需要保护顶层属性不被修改，而嵌套对象无需深度只读的场景。</li><li>与 <code>readonly</code> 相比，它不会对嵌套对象递归处理，从而减少性能开销。</li></ul><h2 id="_2-基本用法" tabindex="-1">2. 基本用法 <a class="header-anchor" href="#_2-基本用法" aria-label="Permalink to &quot;2. 基本用法&quot;">​</a></h2><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ state.count }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ state.nested.name }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;updateCount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;修改顶层属性&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">br</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;updateShallowReadonly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;强行修改嵌套属性&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { shallowReadonly } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> shallowReadonly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  count: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nested: { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(state.count); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(state.nested.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 定义一个方法来修改顶层属性</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  state.count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改顶层属性，会触发警告（开发模式下）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;修改顶层属性:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state.count); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 警告：避免直接修改只读属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 定义一个方法来强行修改 shallowReadonly</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateShallowReadonly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 修改嵌套对象的属性，不会触发视图更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  state.nested.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;React&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;强行修改嵌套属性后:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state.nested.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 React</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><ul><li><code>state.count</code> 是顶层属性，Vue 会阻止修改。</li><li><code>state.nested.name</code> 是嵌套属性，Vue 不会阻止修改，也不会触发警告,但视图不会更新。</li></ul><p><strong>如图所示：</strong></p><p><img src="`+r+`" alt="shallowReadonly 示例" loading="lazy"></p><h2 id="_3-shallowreadonly-与-readonly-的区别" tabindex="-1">3. <code>shallowReadonly</code> 与 <code>readonly</code> 的区别 <a class="header-anchor" href="#_3-shallowreadonly-与-readonly-的区别" aria-label="Permalink to &quot;3. \`shallowReadonly\` 与 \`readonly\` 的区别&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th><code>readonly</code></th><th><code>shallowReadonly</code></th></tr></thead><tbody><tr><td>响应式深度</td><td>深度只读（递归处理嵌套对象）</td><td>浅层只读（只处理顶层属性）</td></tr><tr><td>修改嵌套对象行为</td><td>嵌套对象不可修改，会触发警告</td><td>嵌套对象可修改，不触发警告，视图也不会更新</td></tr><tr><td>性能开销</td><td>较大（递归代理整个对象）</td><td>较小（只代理顶层属性）</td></tr><tr><td>适用场景</td><td>需要完整深度保护对象，防止所有修改</td><td>只需保护顶层属性，优化性能</td></tr></tbody></table><h2 id="_4-使用场景" tabindex="-1">4. 使用场景 <a class="header-anchor" href="#_4-使用场景" aria-label="Permalink to &quot;4. 使用场景&quot;">​</a></h2><ol><li><p><strong>性能优化</strong></p><ul><li>对大对象或深层嵌套对象，使用 <code>shallowReadonly</code> 可以避免递归代理，减少性能开销。</li></ul></li><li><p><strong>只保护顶层属性</strong></p><ul><li>如果你只希望顶层属性保持只读，嵌套对象不必严格保护，使用 <code>shallowReadonly</code> 更合适。</li></ul></li></ol><h2 id="_5-与-readonly-对比示例" tabindex="-1">5. 与 <code>readonly</code> 对比示例 <a class="header-anchor" href="#_5-与-readonly-对比示例" aria-label="Permalink to &quot;5. 与 \`readonly\` 对比示例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { readonly, shallowReadonly } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> deepObj1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> readonly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ nested: { value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> deepObj2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> shallowReadonly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ nested: { value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改嵌套属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deepObj1.nested.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会触发警告（深度只读）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deepObj2.nested.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不会触发警告（浅层只读）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改顶层属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deepObj1.nested </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会触发警告</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deepObj2.nested </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会触发警告</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><strong><code>readonly</code></strong>：无论是顶层属性还是嵌套属性，都不可修改。</li><li><strong><code>shallowReadonly</code></strong>：只阻止顶层属性修改，嵌套属性可以修改。</li></ul>`,17))])}const m=n(d,[["render",E]]);export{F as __pageData,m as default};
