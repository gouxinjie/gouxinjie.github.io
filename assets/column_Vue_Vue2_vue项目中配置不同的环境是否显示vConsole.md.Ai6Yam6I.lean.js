import{_ as a,c as i,aQ as n,o as e}from"./chunks/framework.Dx7Rg_PH.js";const p="/assets/vconsole.BZFoqzSm.png",l="/assets/vconsole-1.D3Mu3l5_.png",t="/assets/vconsole-2.DP7nHjxu.png",h="/assets/vconsole-5.CEnFTnRy.png",o="/assets/vconsole-3.Cf6XIEMs.png",v=JSON.parse('{"title":"vue 项目中配置不同的环境是否显示 vConsole","description":"","frontmatter":{},"headers":[],"relativePath":"column/Vue/Vue2/vue项目中配置不同的环境是否显示vConsole.md","filePath":"column/Vue/Vue2/vue项目中配置不同的环境是否显示vConsole.md"}'),r={name:"column/Vue/Vue2/vue项目中配置不同的环境是否显示vConsole.md"};function k(c,s,d,E,u,g){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="vue-项目中配置不同的环境是否显示-vconsole" tabindex="-1">vue 项目中配置不同的环境是否显示 vConsole <a class="header-anchor" href="#vue-项目中配置不同的环境是否显示-vconsole" aria-label="Permalink to &quot;vue 项目中配置不同的环境是否显示 vConsole&quot;">​</a></h1><blockquote><p>vConsole 可以帮助我们查看打印的日志和网络请求，一般用来排查和复现生产环境中的问题；在日常开发中非常有用.</p></blockquote><blockquote><p>生产环境肯定是不能打开<code>vConsole</code>的，那么在测试环境中有两种情况 一是打开，二是不打开，所以要配置环境变量并且要有三套环境，方便进行打包部署测试。</p></blockquote><hr><div class="tip custom-block"><p class="custom-block-title">是否显示 vConsole</p><ol><li>测试环境(test)：不显示 vConsole;</li><li>测试环境(test): 显示 vConsole; <strong>这是本篇文章重点讲解的内容</strong></li><li>生产环境(production):不显示 vConsole;</li></ol></div><h2 id="_1-什么是环境变量配置文件" tabindex="-1">1，什么是环境变量配置文件 <a class="header-anchor" href="#_1-什么是环境变量配置文件" aria-label="Permalink to &quot;1，什么是环境变量配置文件&quot;">​</a></h2><p>vue 中的.env 文件为环境变量配置文件，在 package.json 文件中配置在执行命令时对应到配置文件；</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env 			 —— 全局默认配置文件，不管什么环境都会加载（这个一般不进行配置）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.development —— 开发环境下的配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.production	 —— 生产环境下的配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.test		 —— 测试环境下的配置文件 一般和生产环境的环境保持一致  主要用来排查问题</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>如图：大家需要创建这三个环境变量文件，命名和我的一致就行：</p><p><img src="`+p+`" alt="在这里插入图片描述"></p><div class="tip custom-block"><p class="custom-block-title">配置文件标准</p><ol><li>NODE_ENV ：代表是当前环境，用于 package.json 配合打包使用</li><li>自定义属性：属性名必须以&quot;VUE_APP_&quot;开头，比如VUE_APP_XXX（“VUE_APP_”是规定的环境变量名前缀，如果变量名不是以此开头，则在程序中不能调用此环境变量）</li></ol></div><p>里面的详细配置如下：里面的 api 地址大家根据实际情况进行配置即可：</p><p>.env.development：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 开发环境 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UAT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 未打包之前在本地跑就是开发环境</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;development&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # 开发环境</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_RUN_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;uat&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://test.95590.cn/common&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>.env.production：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 生产环境 打包之后的代码就是生产环境</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;production&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_RUN_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;production&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://bdgw.wps-net.com.cn/common&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>.env.test:</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 测试环境 打开 VConsole</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;production&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # 说明是生产环境 此行不可省略 省略打包之后会部署失败</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_RUN_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://test.95590.cn/common&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_2-获取node-env-环境信息" tabindex="-1">2，获取NODE_ENV 环境信息 <a class="header-anchor" href="#_2-获取node-env-环境信息" aria-label="Permalink to &quot;2，获取NODE_ENV 环境信息&quot;">​</a></h2><p>想必大家都知道 <code>process.env</code> 吧，这里面存放的就是我们配置的一些环境变量的信息； 可以在任意页面打印出来：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 页面挂载完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;process.env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,process.env);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;process.env.NODE_ENV&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+l+'" alt="在这里插入图片描述"></p><p>可以看出当前打印的是开发环境：因为我还没打包部署；所以他默认使用的就是.<code>env.development</code>；</p><p>如果是打包部署过的：直接使用的是就是<code>.env.production</code>里面的环境变量：</p><p>既然这两个是可以默认触发的，那我配置这个<code>.env.test</code>该怎么使用呢？往下看：</p><h2 id="_3-在package-json配置打包命令和关联配置信息" tabindex="-1">3，在package.json配置打包命令和关联配置信息 <a class="header-anchor" href="#_3-在package-json配置打包命令和关联配置信息" aria-label="Permalink to &quot;3，在package.json配置打包命令和关联配置信息&quot;">​</a></h2><p>需要在 package.json 文件里面新增如下划红线的：</p><div class="warning custom-block"><p class="custom-block-title">需要注意</p><p>--mode test 对应的就是 <code>.env.test</code> 配置文件；你也可以新增：</p></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build-prod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-cli-service build --mode production&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,(其实这就是生产环境的打包命令了)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+t+`" alt="在这里插入图片描述"></p><h2 id="_4-在main-js里面判断根据环境来判断" tabindex="-1">4，在main.js里面判断根据环境来判断 <a class="header-anchor" href="#_4-在main-js里面判断根据环境来判断" aria-label="Permalink to &quot;4，在main.js里面判断根据环境来判断&quot;">​</a></h2><p>前提要安装好 vConsole,安装命令：<code>npm install vconsole</code>；新增判断代码如下： main.js：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">引入VConsole 根据环境按需引入 test环境打包的时候引入</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VConsole </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vconsole&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_RUN_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VConsole</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>5，运行打包命令 npm run build-test</strong></p><p>在终端运行上面在 package.json 配置好的打包命令，npm run build-test 下面打包完成：</p><p><img src="`+h+'" alt="在这里插入图片描述"></p><p><strong>打包之后，我部署完成运行，页面正常运转也看到 vConsole 顺利打开了：</strong></p><p><img src="'+o+'" alt="在这里插入图片描述"></p><p>至此，整个流程走完；</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p><code>NODE_ENV=&quot; &quot;</code> 属性是必须要有，为了区分开发环境和生产环境的标志；</p><p><code>VUE_APP_RUN_ENV=&quot; &quot;</code>自定义属性是为了做其他判断用的，就比如是否打开 vConsole；</p></div>',40)]))}const m=a(r,[["render",k]]);export{v as __pageData,m as default};
