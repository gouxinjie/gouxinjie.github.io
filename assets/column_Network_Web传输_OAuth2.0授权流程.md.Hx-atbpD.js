import{_ as n,C as t,c as e,o as p,j as a,G as h,aQ as l,a as o}from"./chunks/framework.DEi4YP2n.js";const r="/assets/OAuth.TJzC6LIS.png",k="/assets/OAuth-1.L5Qj1xEy.jpg",u="/assets/OAuth-2.DEw5aW5K.png",_=JSON.parse('{"title":"OAuth2.0 授权流程讲解","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/Web传输/OAuth2.0授权流程.md","filePath":"column/Network/Web传输/OAuth2.0授权流程.md","lastUpdated":1758265300000}'),d={name:"column/Network/Web传输/OAuth2.0授权流程.md"};function c(E,s,g,q,b,F){const i=t("ArticleMetadata");return p(),e("div",null,[s[0]||(s[0]=a("h1",{id:"oauth2-0-授权流程讲解",tabindex:"-1"},[o("OAuth2.0 授权流程讲解 "),a("a",{class:"header-anchor",href:"#oauth2-0-授权流程讲解","aria-label":'Permalink to "OAuth2.0 授权流程讲解"'},"​")],-1)),h(i),s[1]||(s[1]=l('<nav class="table-of-contents"><ul><li><a href="#_1、什么是认证-authentication">1、什么是认证（Authentication）</a></li><li><a href="#_2、什么是授权-authorization">2、什么是授权（Authorization）</a></li><li><a href="#_3、oauth2-0-介绍">3、OAuth2.0 介绍</a></li><li><a href="#_4、oauth2-0-的主要角色">4、OAuth2.0 的主要角色</a></li><li><a href="#_5、oauth-2-0-的主要流程和应用场景">5、OAuth 2.0 的主要流程和应用场景</a><ul><li><a href="#案例-1-、app-授权登录">案例 1 、app 授权登录</a></li><li><a href="#案例-2、微信网页授权">案例 2、微信网页授权</a></li></ul></li><li><a href="#_6、oauth-2-0-的好处">6、OAuth 2.0 的好处</a></li></ul></nav><div class="info custom-block"><p class="custom-block-title">介绍</p><p>OAuth 2.0 是目前最流行的授权机制，用来授权第三方应用，获取用户数据。</p><p>先了解一下什么是<code>认证</code>（Authentication）和<code>授权</code>（Authorization）。</p></div><h2 id="_1、什么是认证-authentication" tabindex="-1">1、什么是认证（Authentication） <a class="header-anchor" href="#_1、什么是认证-authentication" aria-label="Permalink to &quot;1、什么是认证（Authentication）&quot;">​</a></h2><p>通俗地讲就是验证当前用户的身份，证明“你是你自己”（比如：你每天上下班打卡，都需要通过指纹打卡，当你的指纹和系统里录入的指纹相匹配时，就打卡成功）互联网中的认证：</p><p>(1) 用户名密码登录</p><p>(2) 邮箱发送登录链接</p><p>(3) 手机号接收验证码</p><p>(4) 只要你能收到邮箱/验证码，就默认你是账号的主人</p><h2 id="_2、什么是授权-authorization" tabindex="-1">2、什么是授权（Authorization） <a class="header-anchor" href="#_2、什么是授权-authorization" aria-label="Permalink to &quot;2、什么是授权（Authorization）&quot;">​</a></h2><p>用户授予第三方应用访问该用户某些资源的权限</p><p>你在安装手机应用的时候，APP 会询问是否允许授予权限（访问相册、地理位置等权限）你在访问微信小程序时，当登录时，小程序会询问是否允许授予权限（获取昵称、头像、地区、性别等个人信息）</p><p>实现授权的方式有：cookie、session、token、OAuth</p><h2 id="_3、oauth2-0-介绍" tabindex="-1">3、OAuth2.0 介绍 <a class="header-anchor" href="#_3、oauth2-0-介绍" aria-label="Permalink to &quot;3、OAuth2.0 介绍&quot;">​</a></h2><p><code>OAuth 2.0</code> 是一种<strong>授权框架</strong>，用于使第三方应用能够以安全的方式访问用户在某个服务提供商处的资源，而无需将用户的凭证（如用户名和密码）直接暴露给第三方应用。</p><p><code>OAuth 2.0</code> 通过引入访问令牌（Access Token）的概念来实现这一点，这些令牌代表了用户授予第三方应用的权限。</p><h2 id="_4、oauth2-0-的主要角色" tabindex="-1">4、OAuth2.0 的主要角色 <a class="header-anchor" href="#_4、oauth2-0-的主要角色" aria-label="Permalink to &quot;4、OAuth2.0 的主要角色&quot;">​</a></h2><p>(1) Resource Owner (资源所有者):用户，拥有受保护资源的人。</p><p>(2) Client (客户端):第三方应用，希望访问资源所有者的受保护资源。</p><p>(3)Authorization Server (授权服务器):负责验证资源所有者的身份，并颁发访问令牌。</p><p>(4) Resource Server (资源服务器):持有受保护资源的服务器，使用访问令牌来验证请求的合法性。</p><h2 id="_5、oauth-2-0-的主要流程和应用场景" tabindex="-1">5、OAuth 2.0 的主要流程和应用场景 <a class="header-anchor" href="#_5、oauth-2-0-的主要流程和应用场景" aria-label="Permalink to &quot;5、OAuth 2.0 的主要流程和应用场景&quot;">​</a></h2><p>流程图如下：</p><p><img src="'+r+'" alt="" width="80%" loading="lazy"></p><h3 id="案例-1-、app-授权登录" tabindex="-1">案例 1 、app 授权登录 <a class="header-anchor" href="#案例-1-、app-授权登录" aria-label="Permalink to &quot;案例 1 、app 授权登录&quot;">​</a></h3><p>我们经常使用 app 或者小程序登录，就会遇见以下场景；</p><p>我手机上下载了一个新的<code>qq音乐</code>,进入 app 时需要登录，下方有 QQ 登录和微信登录的按钮，点击 QQ 登录，就会跳转到 QQ 的授权页面（授权页面上显示 qq 音乐申请使用你的头像和昵称信息），点击<code>[同意授权]</code>后返回 qq 音乐 app，然后登陆成功。</p><div class="info custom-block"><p class="custom-block-title">授权页面：</p><p><img src="'+k+'" alt="" width="50%" loading="lazy"></p></div><p>上面就是一个典型的应用场景，qq 音乐作为客户端，需要使用 QQ 用户的数据（头像、昵称等），qq 作为授权服务器，验证 qq 音乐的请求是否合法，并下发令牌。配合流程图不难理解。</p><h3 id="案例-2、微信网页授权" tabindex="-1">案例 2、微信网页授权 <a class="header-anchor" href="#案例-2、微信网页授权" aria-label="Permalink to &quot;案例 2、微信网页授权&quot;">​</a></h3><p>如果用户在微信客户端中访问第三方网页，公众号可以通过微信网页授权机制，来获取用户基本信息，进而实现业务逻辑。</p><p>微信网页授权是通过 OAuth2.0 机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权 access_token），通过网页授权 access_token 可以进行授权后接口调用，如获取用户基本信息；</p><p><strong>网页授权流程分为四步</strong></p><p>(1)、引导用户进入授权页面同意授权，获取 code</p><p><img src="'+u+`" alt="" loading="lazy"></p><p>(2)、通过 code 换取网页授权 access_token（与基础支持中的 access_token 不同）</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;access_token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ACCESS_TOKEN&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;expires_in&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;refresh_token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;REFRESH_TOKEN&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;openid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OPENID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scope&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SCOPE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;is_snapshotuser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;unionid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UNIONID&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>(3)、如果需要，开发者可以刷新网页授权 access_token，避免过期</p><p>由于 access_token 拥有较短的有效期，当 access_token 超时后，可以使用 refresh_token 进行刷新，refresh_token 有效期为 30 天，当 refresh_token 失效之后，需要用户重新授权</p><p>(4)、通过网页授权 access_token 和 openid 获取用户基本信息（支持 UnionID 机制）</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;openid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OPENID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;nickname&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">NICKNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;sex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;province&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PROVINCE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;city&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CITY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;country&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;COUNTRY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;headimgurl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/46&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;privilege&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PRIVILEGE1&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PRIVILEGE2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;unionid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;o6_bmasdasdsad6_2sgVt7hMZOPfL&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html" target="_blank" rel="noreferrer">官方地址</a></p><h2 id="_6、oauth-2-0-的好处" tabindex="-1">6、OAuth 2.0 的好处 <a class="header-anchor" href="#_6、oauth-2-0-的好处" aria-label="Permalink to &quot;6、OAuth 2.0 的好处&quot;">​</a></h2><p>OAuth 2.0 是一种广泛采用的授权框架，它允许用户向第三方应用授权访问其存储在另一服务提供商上的信息，而无需将用户名和密码直接提供给第三方应用。以下是 OAuth 2.0 授权的一些主要好处：</p><p>(1)、 安全性：用户不需要共享他们的用户名和密码给第三方应用，降低了账号被盗用的风险。</p><p>(2)、简化登录：用户可以使用已有的账号（如 Google、Facebook 等）来快速登录第三方应用，提高了用户体验。</p><p>(3)、灵活性：OAuth 2.0 支持多种授权流程，能够适应不同的应用场景，包括网站、移动应用和桌面应用。</p><p>(4)、可控性：用户可以授予或撤销第三方应用的权限，而不需要改变主账号的密码。</p><p>(5)、扩展性：OAuth 2.0 可以支持大量的服务提供商和第三方应用，适用于各种规模的网络服务。</p><p>(6)、标准化：作为一个行业标准，OAuth 2.0 被广泛支持，使得开发者可以更容易地集成和使用授权机制。</p><p>(7)、减少开发者负担：开发者不需要自己实现复杂的用户认证和授权系统，可以利用现有的 OAuth 2.0 服务。</p><p>(8)、增强隐私：用户可以精确控制哪些信息可以被第三方应用访问，有助于保护个人隐私。</p><p>(9)、跨平台：用户可以在不同的设备和平台上使用相同的账号进行授权，提高了服务的便携性。</p>`,52))])}const m=n(d,[["render",c]]);export{_ as __pageData,m as default};
