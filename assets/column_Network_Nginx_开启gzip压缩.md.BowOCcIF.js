import{_ as a,C as l,c as p,o as e,j as i,G as t,aQ as h,a as r}from"./chunks/framework.DEi4YP2n.js";const d="/assets/gzip-1.B54M8Y-Y.png",k="/assets/gzip-2.CsRI3WgL.png",o="/assets/gzip-3.aC8MDFVq.png",c="/assets/gzip-4.ChLO0YBJ.png",g="/assets/gzip-5.BRF_bHRR.png",x=JSON.parse('{"title":"开启 gzip 压缩","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/Nginx/开启gzip压缩.md","filePath":"column/Network/Nginx/开启gzip压缩.md","lastUpdated":1759201926000}'),E={name:"column/Network/Nginx/开启gzip压缩.md"};function u(b,s,y,m,z,F){const n=l("ArticleMetadata");return e(),p("div",null,[s[0]||(s[0]=i("h1",{id:"开启-gzip-压缩",tabindex:"-1"},[r("开启 gzip 压缩 "),i("a",{class:"header-anchor",href:"#开启-gzip-压缩","aria-label":'Permalink to "开启 gzip 压缩"'},"​")],-1)),t(n),s[1]||(s[1]=h('<nav class="table-of-contents"><ul><li><a href="#一、-服务器端开启-gzip-压缩">一、 服务器端开启 Gzip 压缩</a></li><li><a href="#二、-客户端开启-gzip-压缩-也需要配置-nginx">二、 客户端开启 Gzip 压缩（也需要配置 nginx）</a></li><li><a href="#三、总结">三、总结</a><ul><li><a href="#_1️-vite-plugin-compression-的作用">1️. vite-plugin-compression 的作用</a></li><li><a href="#_2️-nginx-gzip-压缩与插件的区别">2️. Nginx Gzip 压缩与插件的区别</a></li><li><a href="#_3️-实际项目选择建议">3️. 实际项目选择建议</a></li></ul></li><li><a href="#四、常见问题">四、常见问题</a><ul><li><a href="#_1️-nginx-配置作用域规则">1️. Nginx 配置作用域规则</a></li><li><a href="#_2-gzip-static-on-的作用">2. gzip_static on; 的作用</a></li><li><a href="#_3-gzip-static-on-静态压缩文件-与-gzip-on-同时存在">3. gzip_static on; + 静态压缩文件 与 gzip on; 同时存在？</a></li></ul></li></ul></nav><p>在前端项目中，<code>JS/CSS </code>文件较大时，启用 <code>Gzip</code> 压缩可以显著减少传输体积，提高页面加载速度。<br> 下面我以 <code>Vue3</code> 项目 为例，讲解如何在 本地 Nginx 环境下开启 Gzip，并验证效果。</p><p><strong>开启 gzip 压缩有两种方式：</strong></p><ol><li>服务器端开启 Gzip 压缩</li><li>客户端开启 Gzip 压缩</li></ol><p>但都要在 <code>nginx</code> 中配置，才能生效。</p><h2 id="一、-服务器端开启-gzip-压缩" tabindex="-1">一、 服务器端开启 Gzip 压缩 <a class="header-anchor" href="#一、-服务器端开启-gzip-压缩" aria-label="Permalink to &quot;一、 服务器端开启 Gzip 压缩&quot;">​</a></h2><p>将 Vue3 打包目录拷贝到 Nginx 的部署目录，我这里是 <code>D:\\Deploy\\vue3</code></p><p><img src="'+d+`" alt="" loading="lazy"></p><p>编辑 <code>Nginx</code> 配置<code> nginx.conf</code>，添加 <code>server</code> 配置：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 压缩开启</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启 gzip</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_vary </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 根据 Accept-Encoding 缓存不同版本</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_min_length </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 小于 1KB 的不压缩</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_comp_level </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 压缩等级</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_types </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text/plain text/css application/javascript application/json text/html application/xml image/svg+xml;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # vue3项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /vue3/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        alias </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D:/Deploy/vue3/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>配置解释：</strong></p><ul><li>gzip on：开启 Gzip 压缩</li><li>gzip_types：指定压缩的文件类型</li><li>try_files $uri $uri/ /index.html：Vue3 history 模式路由支持</li></ul><p>启动 Nginx 后，访问 <code>http://localhost/vue3/</code>，查看 <code>Network</code> 面板，查看 <code>JS/CSS</code> 文件响应头的字段 <code>content-encoding</code> 为 <code>gzip</code>，说明开启了 Gzip 压缩。</p><p>如果没有 <code>content-encoding</code> 字段，说明未成功开启<code>gzip</code>。</p><p><strong>如下所示(成功开启)：</strong></p><p><img src="`+k+'" alt="" loading="lazy"></p><p><strong>未成功开启：</strong></p><p><img src="'+o+`" alt="" loading="lazy"></p><h2 id="二、-客户端开启-gzip-压缩-也需要配置-nginx" tabindex="-1">二、 客户端开启 Gzip 压缩（也需要配置 nginx） <a class="header-anchor" href="#二、-客户端开启-gzip-压缩-也需要配置-nginx" aria-label="Permalink to &quot;二、 客户端开启 Gzip 压缩（也需要配置 nginx）&quot;">​</a></h2><p>客户端开启 Gzip 压缩，需要在使用第三方插件在打包构建时就需要生成对应的 <code>.gz</code> 文件。我的 vue3 项目使用的是 <code>vite-plugin-compression</code>,在 vite.config.ts 中这样配置：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compressionPlugin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vite-plugin-compression&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // gzip压缩</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ViteCompression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      verbose: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否在控制台输出压缩结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      disable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否禁用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      threshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 体积大于 threshold 才会被压缩,单位 b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      algorithm: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gzip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 压缩算法,可选 [ &#39;gzip&#39; , &#39;brotliCompress&#39; ,&#39;deflate&#39; , &#39;deflateRaw&#39;]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ext: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.gz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成的压缩包后缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      deleteOriginFile: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //压缩后是否删除源文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>运行 <code>vite build</code> 打包项目，会在 <code>dist</code> 目录下生成对应的 <code>.gz</code> 文件。</p><p><strong>如下所示：</strong></p><p><img src="`+c+`" alt="" loading="lazy"></p><p>然后在 nginx 中配置<code>gzip on</code> 和 <code>gzip_static on;</code>，开启直接返回 <code>.gz</code> 文件的功能。</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 压缩开启</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_static </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 直接返回 .gz 文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # vue3项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /vue3/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        alias </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D:/Deploy/vue3/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>最后访问部署的项目 <code>http://localhost/vue3/</code>，查看 <code>Network</code> 面板，查看 <code>JS/CSS</code> 文件响应头的字段 <code>content-encoding</code> 为 <code>gzip</code>，说明开启了 Gzip 压缩。</p><p><strong>如下所示：</strong></p><p><img src="`+g+'" alt="" loading="lazy"></p><h2 id="三、总结" tabindex="-1">三、总结 <a class="header-anchor" href="#三、总结" aria-label="Permalink to &quot;三、总结&quot;">​</a></h2><h3 id="_1️-vite-plugin-compression-的作用" tabindex="-1">1️. <code>vite-plugin-compression</code> 的作用 <a class="header-anchor" href="#_1️-vite-plugin-compression-的作用" aria-label="Permalink to &quot;1️. `vite-plugin-compression` 的作用&quot;">​</a></h3><ul><li><p>在 <strong>构建阶段</strong>就把静态资源（JS/CSS/HTML）生成压缩文件（如 <code>.gz</code> 或 <code>.br</code>）。</p></li><li><p>优点：</p><ul><li>浏览器访问时直接获取压缩文件，不需要 Nginx 或其他服务器再压缩</li><li>减少服务器 CPU 消耗，适合高并发场景</li></ul></li><li><p>缺点：</p><ul><li>文件体积会多一份（原文件 + 压缩文件）</li><li>部署时服务器需要正确配置，让 <code>.gz</code> 文件直接返回给浏览器</li></ul></li></ul><h3 id="_2️-nginx-gzip-压缩与插件的区别" tabindex="-1">2️. Nginx Gzip 压缩与插件的区别 <a class="header-anchor" href="#_2️-nginx-gzip-压缩与插件的区别" aria-label="Permalink to &quot;2️. Nginx Gzip 压缩与插件的区别&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>Nginx Gzip</th><th>vite-plugin-compression</th></tr></thead><tbody><tr><td>压缩时机</td><td>请求时（服务器动态压缩）</td><td>构建时（生成静态压缩文件）</td></tr><tr><td>CPU 消耗</td><td>高并发时占用服务器 CPU</td><td>构建阶段消耗 CPU，运行时几乎零消耗</td></tr><tr><td>配置复杂度</td><td>简单：<code>gzip on</code> + <code>gzip_types</code></td><td>需要插件 + 配置 Nginx 支持 <code>.gz</code> 文件</td></tr><tr><td>文件存储</td><td>不占额外磁盘空间</td><td>占额外空间（生成 <code>.gz</code> 文件）</td></tr><tr><td>性能</td><td>小文件差异不大，长连接 + HTTP2 可快速传输</td><td>高并发大文件优势明显</td></tr></tbody></table><h3 id="_3️-实际项目选择建议" tabindex="-1">3️. 实际项目选择建议 <a class="header-anchor" href="#_3️-实际项目选择建议" aria-label="Permalink to &quot;3️. 实际项目选择建议&quot;">​</a></h3><ol><li><p><strong>本地开发或小型项目</strong></p><ul><li>只使用 <strong>Nginx Gzip</strong> 就够了</li><li>简单配置即可，无需插件</li></ul></li><li><p><strong>大型项目 / 高并发部署</strong></p><ul><li><p>推荐在 <strong>构建阶段生成压缩文件</strong>（<code>vite-plugin-compression</code>）</p></li><li><p>配合 Nginx 配置：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /assets/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   gzip_static </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 直接返回 .gz 文件</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   expires </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1y;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public, immutable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>优点：请求时不再动态压缩，CPU 占用低，性能更稳定</p></li></ul></li></ol><h2 id="四、常见问题" tabindex="-1">四、常见问题 <a class="header-anchor" href="#四、常见问题" aria-label="Permalink to &quot;四、常见问题&quot;">​</a></h2><h3 id="_1️-nginx-配置作用域规则" tabindex="-1">1️. Nginx 配置作用域规则 <a class="header-anchor" href="#_1️-nginx-配置作用域规则" aria-label="Permalink to &quot;1️. Nginx 配置作用域规则&quot;">​</a></h3><ul><li><p>Nginx 配置指令有 <strong>全局、http、server、location</strong> 作用域</p></li><li><p><strong>某些指令只能在 http/server 级别生效，或者全局继承</strong></p></li><li><p><code>gzip on;</code> 指令就是典型例子：</p><ul><li>可以在 <strong>http</strong> 或 <strong>server</strong> 块中开启</li><li>在 <strong>location 块</strong> 中开启，有些版本/编译方式不生效，导致 gzip header 不加</li></ul></li></ul><blockquote><p>官方文档也说明：<code>gzip</code> 可以在 http、server 或 location 块启用，但有些版本 location 中开启可能不触发 <code>gzip_static</code> 的 <code>Content-Encoding</code> 逻辑</p></blockquote><h3 id="_2-gzip-static-on-的作用" tabindex="-1">2. <code>gzip_static on;</code> 的作用 <a class="header-anchor" href="#_2-gzip-static-on-的作用" aria-label="Permalink to &quot;2. `gzip_static on;` 的作用&quot;">​</a></h3><p>如果请求的文件存在<code>.gz</code>压缩文件，直接返回该文件给浏览器。</p><p><strong>请求流程（开启 gzip_static）</strong>：</p><ol><li><p>浏览器请求资源 <code>app.js</code>，并发送 <code>Accept-Encoding: gzip</code></p></li><li><p>Nginx 检查：</p><ul><li>是否存在 <code>app.js.gz</code></li><li>浏览器是否支持 gzip</li></ul></li><li><p>如果条件满足：</p><ul><li>返回 <code>app.js.gz</code> 文件内容</li><li><strong>必须开启全局 <code>gzip on;</code> 才会自动添加 <code>Content-Encoding: gzip</code> 响应头</strong></li></ul></li><li><p>浏览器收到响应后自动解压显示</p></li></ol><h3 id="_3-gzip-static-on-静态压缩文件-与-gzip-on-同时存在" tabindex="-1">3. <code>gzip_static on; + 静态压缩文件</code> 与 <code>gzip on;</code> 同时存在？ <a class="header-anchor" href="#_3-gzip-static-on-静态压缩文件-与-gzip-on-同时存在" aria-label="Permalink to &quot;3. `gzip_static on; + 静态压缩文件` 与 `gzip on;` 同时存在？&quot;">​</a></h3><p><strong>优先级原则</strong></p><ol><li><p><strong>如果请求的资源存在 <code>.gz</code> 文件，且浏览器支持 gzip</strong></p><ul><li>Nginx <strong>优先使用 <code>.gz</code> 文件</strong>（gzip_static）</li><li><code>gzip on</code> 不会再次压缩 <code>.gz</code> 文件</li></ul></li><li><p><strong>如果请求的资源没有 <code>.gz</code> 文件</strong></p><ul><li>Nginx 会使用 <code>gzip on</code> 对原文件进行动态压缩</li></ul></li></ol><div class="warning custom-block"><p class="custom-block-title">注意</p><p>想要开启 <code>gzip</code>压缩，<code>gzip on;</code> 必须开启全局，才能自动添加 <code>Content-Encoding: gzip</code> 响应头。</p><p>只有 <code>gzip_static</code> 是不会生效的。</p></div>',48))])}const D=a(E,[["render",u]]);export{x as __pageData,D as default};
