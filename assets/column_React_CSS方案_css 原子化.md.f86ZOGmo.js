import{_ as n,C as l,c as p,o as e,j as i,G as t,aQ as h,a as k}from"./chunks/framework.DEi4YP2n.js";const y=JSON.parse('{"title":"CSS 原子化","description":"","frontmatter":{},"headers":[],"relativePath":"column/React/CSS方案/css 原子化.md","filePath":"column/React/CSS方案/css 原子化.md","lastUpdated":1759999524000}'),r={name:"column/React/CSS方案/css 原子化.md"};function d(E,s,c,o,g,u){const a=l("ArticleMetadata");return e(),p("div",null,[s[0]||(s[0]=i("h1",{id:"css-原子化",tabindex:"-1"},[k("CSS 原子化 "),i("a",{class:"header-anchor",href:"#css-原子化","aria-label":'Permalink to "CSS 原子化"'},"​")],-1)),t(a),s[1]||(s[1]=h(`<h2 id="什么是-css-原子化" tabindex="-1">什么是 CSS 原子化？ <a class="header-anchor" href="#什么是-css-原子化" aria-label="Permalink to &quot;什么是 CSS 原子化？&quot;">​</a></h2><p><code>CSS 原子化（Atomic CSS）</code>是一种将样式拆分为最小且独立单元的设计方法，其核心思想是每个<code> CSS</code> 类只应用单一的样式属性，而不是组合样式。</p><p>例如，<code>.bg-red</code>只设置背景色为红色，<code>.text-center</code>只让文本居中。</p><div class="tip custom-block"><p class="custom-block-title">原子化 CSS 的特点</p><ul><li>每个类名只控制一个样式属性</li><li>通过组合多个类实现复杂样式</li><li>减少冗余 CSS 代码，压缩文件大小</li><li>采用简单直观的命名规则，便于理解修改</li></ul></div><h2 id="如何使用-css-原子化" tabindex="-1">如何使用 CSS 原子化 <a class="header-anchor" href="#如何使用-css-原子化" aria-label="Permalink to &quot;如何使用 CSS 原子化&quot;">​</a></h2><h3 id="_1-使用-tailwind-css" tabindex="-1">1. 使用 Tailwind CSS <a class="header-anchor" href="#_1-使用-tailwind-css" aria-label="Permalink to &quot;1. 使用 Tailwind CSS&quot;">​</a></h3><p><code>Tailwind</code> 是目前最流行的原子化 <code>CSS</code> 框架之一。安装使用非常简单：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tailwindcss</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后创建配置文件<code>tailwind.config.js</code>，在其中可以自定义断点值、间距单位等：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// tailwind.config.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  theme: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    screens: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      sm: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;640px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      md: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;768px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      lg: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1024px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      xl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1280px&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spacing: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;12px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;24px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;32px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;48px&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>使用示例：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Button&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-使用-unocss" tabindex="-1">2. 使用 Unocss <a class="header-anchor" href="#_2-使用-unocss" aria-label="Permalink to &quot;2. 使用 Unocss&quot;">​</a></h3><p><code>Unocss</code> 是另一款强大的原子化 CSS 引擎，相比 <code>Tailwind</code> 更加自由灵活。在 <code>Vue3 + Vite + TS </code>项目中的配置方法：</p><p>安装依赖：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unocss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @unocss/preset-uno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @unocss/preset-attributify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @unocss/preset-icons</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置 vite.config.ts：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@vitejs/plugin-vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unocss </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unocss/vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { presetUno, presetAttributify, presetIcons } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unocss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Unocss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      presets: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">presetUno</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">presetAttributify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">presetIcons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      rules: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;p-c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            position: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;absolute&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            top: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            left: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            transform: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`translate(-50%, -50%)\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">m-(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ([, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ margin: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}rem\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>使用示例：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-25px text-#ff6700 bg-#ccc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;你好Unocss&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i-logos-atomic-icon w-50px h-50px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="原子化-css-vs-scss-优势对比" tabindex="-1">原子化 CSS vs SCSS：优势对比 <a class="header-anchor" href="#原子化-css-vs-scss-优势对比" aria-label="Permalink to &quot;原子化 CSS vs SCSS：优势对比&quot;">​</a></h2><h3 id="_1-代码体积显著减少" tabindex="-1">1. 代码体积显著减少 <a class="header-anchor" href="#_1-代码体积显著减少" aria-label="Permalink to &quot;1. 代码体积显著减少&quot;">​</a></h3><p>Facebook 重构后采用原子化 CSS，主页 CSS 体积减少了 80%。这是因为原子化 CSS 通过高度复用样式规则，避免了传统 CSS 中的大量重复代码。</p><h3 id="_2-更少的样式冲突" tabindex="-1">2. 更少的样式冲突 <a class="header-anchor" href="#_2-更少的样式冲突" aria-label="Permalink to &quot;2. 更少的样式冲突&quot;">​</a></h3><p>原子化 CSS 使用最简单的类选择器，CSS 权重问题几乎不存在。而在 SCSS 中，嵌套选择器可能导致权重问题，需要谨慎管理。</p><h3 id="_3-更好的可维护性" tabindex="-1">3. 更好的可维护性 <a class="header-anchor" href="#_3-更好的可维护性" aria-label="Permalink to &quot;3. 更好的可维护性&quot;">​</a></h3><p>当需要修改样式时，原子化 CSS 允许直接修改 HTML 中的类名，而不是去查找和修改 CSS 文件。这种&quot;紧密耦合&quot;在现代前端框架中被证明是高效的。</p><h3 id="_4-更快的开发速度" tabindex="-1">4. 更快的开发速度 <a class="header-anchor" href="#_4-更快的开发速度" aria-label="Permalink to &quot;4. 更快的开发速度&quot;">​</a></h3><p>有了完善的原子类库和编辑器智能提示，开发者可以快速组合出所需样式，无需反复在 HTML 和 CSS 文件间切换。而 SCSS 虽然提供了变量、混合等特性，但仍需要手动编写样式规则。</p><h3 id="_5-更优的缓存策略" tabindex="-1">5. 更优的缓存策略 <a class="header-anchor" href="#_5-更优的缓存策略" aria-label="Permalink to &quot;5. 更优的缓存策略&quot;">​</a></h3><p>原子化 CSS 一旦准备好，将不会有太大变化或增长，可以更有效地缓存它。而 SCSS 生成的 CSS 会随着项目增长而不断变化。</p><h3 id="_6-更简单的删除无用代码" tabindex="-1">6. 更简单的删除无用代码 <a class="header-anchor" href="#_6-更简单的删除无用代码" aria-label="Permalink to &quot;6. 更简单的删除无用代码&quot;">​</a></h3><p>删除功能时，原子化 CSS 确保相关样式也同时被删掉，因为样式直接写在 HTML 中。而 SCSS 中可能存在残留的无用样式规则。</p><h2 id="谁在使用原子化-css" tabindex="-1">谁在使用原子化 CSS？ <a class="header-anchor" href="#谁在使用原子化-css" aria-label="Permalink to &quot;谁在使用原子化 CSS？&quot;">​</a></h2><h3 id="_1-facebook" tabindex="-1">1. Facebook <a class="header-anchor" href="#_1-facebook" aria-label="Permalink to &quot;1. Facebook&quot;">​</a></h3><p>Facebook 是原子化 CSS 的主要推动者之一。他们在重构中完全抛弃了 Sass/Less，采用原子化 CSS 方法，使主页 CSS 体积减少了 80%。</p><h3 id="_2-twitter" tabindex="-1">2. Twitter <a class="header-anchor" href="#_2-twitter" aria-label="Permalink to &quot;2. Twitter&quot;">​</a></h3><p>Twitter 也跟随 Facebook 的步伐，在产品部署中采用了原子化 CSS 的方法。</p><h2 id="原子化-css-的局限性" tabindex="-1">原子化 CSS 的局限性 <a class="header-anchor" href="#原子化-css-的局限性" aria-label="Permalink to &quot;原子化 CSS 的局限性&quot;">​</a></h2><p>尽管有诸多优势，原子化 CSS 也存在一些挑战：</p><ol><li><p><strong>HTML 臃肿</strong>：复杂的元素可能需要大量类名，使 HTML 变得冗长。不过类名中的高冗余使得 gzip 可以很好压缩。</p></li><li><p><strong>学习曲线</strong>：需要学习一套新的命名约定，初期可能影响开发效率。</p></li><li><p><strong>一次性样式处理</strong>：当需要一些特殊样式而原子库未提供时，处理起来不太方便。</p></li><li><p><strong>伪类支持有限</strong>：需要用到伪类的地方通常需要结合传统写法。</p></li></ol>`,41))])}const F=n(r,[["render",d]]);export{y as __pageData,F as default};
