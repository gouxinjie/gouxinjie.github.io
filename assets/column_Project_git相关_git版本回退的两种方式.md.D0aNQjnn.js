import{_ as i,C as s,c as r,o as d,j as e,G as o,aQ as l,a as n}from"./chunks/framework.DEi4YP2n.js";const c="/assets/reset-2.CS-70mGM.png",g="/assets/reset-1.-0tRRf0f.png",h="/assets/git-revert-1.v3s82pPx.png",p="/assets/git-reset-1.ubDeTFuN.png",y=JSON.parse('{"title":"git 版本回退的两种方式","description":"","frontmatter":{},"headers":[],"relativePath":"column/Project/git相关/git版本回退的两种方式.md","filePath":"column/Project/git相关/git版本回退的两种方式.md","lastUpdated":1760688554000}'),u={name:"column/Project/git相关/git版本回退的两种方式.md"};function b(m,t,k,v,_,f){const a=s("ArticleMetadata");return d(),r("div",null,[t[0]||(t[0]=e("h1",{id:"git-版本回退的两种方式",tabindex:"-1"},[n("git 版本回退的两种方式 "),e("a",{class:"header-anchor",href:"#git-版本回退的两种方式","aria-label":'Permalink to "git 版本回退的两种方式"'},"​")],-1)),o(a),t[1]||(t[1]=l('<nav class="table-of-contents"><ul><li><a href="#一、两种回退方式">一、两种回退方式</a><ul><li><a href="#_1-git-revert-方式">1. git revert 方式</a></li><li><a href="#_2-git-reset-方式">2. git reset 方式</a></li></ul></li><li><a href="#二、-使用-git-revert-撤销">二、 使用 git revert 撤销</a><ul><li><a href="#_1-复制要撤销的提交的哈希值">1. 复制要撤销的提交的哈希值</a></li><li><a href="#_2-执行-git-revert-命令">2. 执行 git revert 命令</a></li></ul></li><li><a href="#三、使用-git-reset-撤销">三、使用 git reset 撤销</a><ul><li><a href="#_1-复制要撤销的提交的哈希值-1">1. 复制要撤销的提交的哈希值</a></li><li><a href="#_2-执行-git-reset-命令">2. 执行 git reset 命令</a></li></ul></li></ul></nav><p>只要执行了 <code>commit</code> 命令，也就是 <code>git commit -m &#39;描述&#39;</code> 就会生成一个提交记录，这个提交记录就有一个唯一的哈希值。有了哈希值就可以回退到前面的提交记录。不能回退最新的提交记录（因为最新的你回不回退没有任何区别）。</p><p><strong>git 提交时间线如下：</strong></p><p><img src="'+c+'" alt="git-撤销提交" loading="lazy"></p><p><code>HEAD</code> 是指向当前分支最新提交的指针。</p><p><img src="'+g+'" alt="git-撤销提交" loading="lazy"></p><h2 id="一、两种回退方式" tabindex="-1">一、两种回退方式 <a class="header-anchor" href="#一、两种回退方式" aria-label="Permalink to &quot;一、两种回退方式&quot;">​</a></h2><p><code>git 撤销已 push</code>代码的方式有两种：<code>git revert</code> 和 <code>git reset</code>；</p><p><code>reset</code> 是重置的意思，<code>revert</code> 是恢复、还原的意思，第一感觉 <code>reset</code> 的效果比 <code>revert</code> 更猛一些，实际情况也的确如此。区别如下：</p><h3 id="_1-git-revert-方式" tabindex="-1">1. git revert 方式 <a class="header-anchor" href="#_1-git-revert-方式" aria-label="Permalink to &quot;1. git revert 方式&quot;">​</a></h3><ul><li><p><code>1. git revert</code>：创建一个新的提交来撤销之前的提交；</p><ul><li><code>git revert</code> 是一种安全的方式来撤销提交。</li><li><strong>它会创建一个新的提交记录，这个提交的内容是撤销指定提交的更改。</strong></li></ul></li></ul><p><strong>图解如下：</strong></p><p><img src="'+h+'" alt="git-撤销提交" loading="lazy"></p><h3 id="_2-git-reset-方式" tabindex="-1">2. git reset 方式 <a class="header-anchor" href="#_2-git-reset-方式" aria-label="Permalink to &quot;2. git reset 方式&quot;">​</a></h3><ul><li><code>git reset</code>：回退到指定的提交 <ul><li>可以将当前分支的指针回退到指定的提交</li><li><strong>注意：<code>git reset</code> 会丢弃指定提交之后的所有提交记录，所以在使用时要非常小心。</strong></li></ul></li></ul><p><strong>图解如下：</strong></p><p><img src="'+p+'" alt="git-撤销提交" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>使用这两种撤销时都需要先执行 <code>git log</code> 命令查看提交历史，复制要撤销的提交的哈希值。</p></div><h2 id="二、-使用-git-revert-撤销" tabindex="-1">二、 使用 git revert 撤销 <a class="header-anchor" href="#二、-使用-git-revert-撤销" aria-label="Permalink to &quot;二、 使用 git revert 撤销&quot;">​</a></h2><h3 id="_1-复制要撤销的提交的哈希值" tabindex="-1">1. 复制要撤销的提交的哈希值 <a class="header-anchor" href="#_1-复制要撤销的提交的哈希值" aria-label="Permalink to &quot;1. 复制要撤销的提交的哈希值&quot;">​</a></h3><p>终端执行 <code>git log</code> 命令，复制要撤销的提交的哈希值。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>也就是：<code>8d0086a3fde5d9ebc240ce7330ae8f887a20e906</code></p><h3 id="_2-执行-git-revert-命令" tabindex="-1">2. 执行 git revert 命令 <a class="header-anchor" href="#_2-执行-git-revert-命令" aria-label="Permalink to &quot;2. 执行 git revert 命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8d0086a3fde5d9ebc240ce7330ae8f887a20e906</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>git revert 命令可没有 --hard 选项。git reset 命令有 --hard 选项(硬回退)。</p></div><h2 id="三、使用-git-reset-撤销" tabindex="-1">三、使用 git reset 撤销 <a class="header-anchor" href="#三、使用-git-reset-撤销" aria-label="Permalink to &quot;三、使用 git reset 撤销&quot;">​</a></h2><h3 id="_1-复制要撤销的提交的哈希值-1" tabindex="-1">1. 复制要撤销的提交的哈希值 <a class="header-anchor" href="#_1-复制要撤销的提交的哈希值-1" aria-label="Permalink to &quot;1. 复制要撤销的提交的哈希值&quot;">​</a></h3><p>终端执行 <code>git log</code> 命令，复制要撤销的提交的哈希值。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>也就是：<code>8d0086a3fde5d9ebc240ce7330ae8f887a20e906</code></p><h3 id="_2-执行-git-reset-命令" tabindex="-1">2. 执行 git reset 命令 <a class="header-anchor" href="#_2-执行-git-reset-命令" aria-label="Permalink to &quot;2. 执行 git reset 命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8d0086a3fde5d9ebc240ce7330ae8f887a20e906</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>git reset 选项总结</strong></p><table tabindex="0"><thead><tr><th>选项</th><th>命令示例</th><th>影响范围</th><th>适用场景</th><th>危险程度</th></tr></thead><tbody><tr><td><strong>--soft</strong></td><td><code>git reset --soft HEAD^</code></td><td>只撤销 commit，保留<strong>工作区</strong>和<strong>暂存区</strong></td><td>重新组织提交、修改提交信息</td><td>⭐☆☆☆☆ 最低</td></tr><tr><td><strong>--mixed</strong> (默认)</td><td><code>git reset --mixed HEAD^</code></td><td>撤销 commit 和<strong>暂存区</strong>，保留<strong>工作区</strong>修改</td><td>重新选择要提交的文件、撤销暂存</td><td>⭐⭐☆☆☆ 较低</td></tr><tr><td><strong>--hard</strong></td><td><code>git reset --hard HEAD^</code></td><td>完全撤销 commit、暂存区和工作区的<strong>所有修改</strong></td><td>彻底放弃最近的所有更改</td><td>⭐⭐⭐⭐⭐ 最高</td></tr><tr><td><strong>--merge</strong></td><td><code>git reset --merge HEAD^</code></td><td>在合并冲突时使用，保留未合并文件状态</td><td>解决合并冲突、撤销失败的合并</td><td>⭐⭐⭐☆☆ 中等</td></tr><tr><td><strong>--keep</strong></td><td><code>git reset --keep HEAD^</code></td><td>保留工作区本地修改，冲突时中止操作</td><td>保留本地修改的同时重置提交</td><td>⭐⭐☆☆☆ 较低</td></tr></tbody></table><p>快速选择指南:</p><table tabindex="0"><thead><tr><th>你的需求</th><th>推荐选项</th></tr></thead><tbody><tr><td>只想修改提交信息或重新提交</td><td><code>--soft</code></td></tr><tr><td>取消提交，重新选择要提交的文件</td><td><code>--mixed</code> (默认)</td></tr><tr><td>彻底丢弃所有更改，回到之前状态</td><td><code>--hard</code></td></tr><tr><td>处理合并冲突后的重置</td><td><code>--merge</code></td></tr><tr><td>保留本地修改的同时重置提交</td><td><code>--keep</code></td></tr></tbody></table>',37))])}const C=i(u,[["render",b]]);export{y as __pageData,C as default};
