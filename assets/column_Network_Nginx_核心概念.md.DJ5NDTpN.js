import{_ as i,a as t,b as e}from"./chunks/nginx-2.Cgx5jZ6B.js";import{_ as l,C as p,c as r,o as h,j as n,G as d,aQ as o,a as k}from"./chunks/framework.DEi4YP2n.js";const c="/assets/Nginx2-5.8hGWP1xt.png",g="/assets/Nginx2-6.BWpJkFbY.png",b="/assets/Nginx2-2.D71-A_nC.png",E="/assets/Nginx2-1.sbAOfm4g.png",m="/assets/Nginx2-3.CEmbkyGA.png",u="/assets/Nginx2-4.xi4G9qUG.png",N=JSON.parse('{"title":"Nginx 的核心概念","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/Nginx/核心概念.md","filePath":"column/Network/Nginx/核心概念.md","lastUpdated":1760403902000}'),y={name:"column/Network/Nginx/核心概念.md"};function x(F,s,_,v,D,A){const a=p("ArticleMetadata");return h(),r("div",null,[s[0]||(s[0]=n("h1",{id:"nginx-的核心概念",tabindex:"-1"},[k("Nginx 的核心概念 "),n("a",{class:"header-anchor",href:"#nginx-的核心概念","aria-label":'Permalink to "Nginx 的核心概念"'},"​")],-1)),d(a),s[1]||(s[1]=o('<nav class="table-of-contents"><ul><li><a href="#一、常用命令">一、常用命令</a></li><li><a href="#二、核心功能">二、核心功能</a><ul><li><a href="#_1-正向代理和反向代理">1. 正向代理和反向代理</a></li><li><a href="#_2-负载均衡">2. 负载均衡</a></li><li><a href="#_3-动静分离">3. 动静分离</a></li></ul></li></ul></nav><p><code>Nginx</code>是一个高性能的 HTTP 和反向代理服务器，以其 <strong>高并发处理能力</strong>、<strong>低内存消耗</strong>和<strong>模块化架构</strong>闻名。根据 W3Techs 数据，全球约<strong>34.2%</strong> 的网站使用<code>Nginx 作为 Web</code>服务器或反向代理。</p><div class="info custom-block"><p class="custom-block-title">Nginx 安装</p><p>下载链接：<a href="http://nginx.org/en/download.html" target="_blank" rel="noreferrer">http://nginx.org/en/download.html</a></p><p>我安装的是：1.16.1 版本的，如下：</p><p><img src="'+i+'" alt="在这里插入图片描述" width="90%" loading="lazy"></p><p><strong>然后解压到一个指定的文件夹就行；双击根目录的 nginx 图标</strong> ，然后再访问 <a href="http://localhost/" target="_blank" rel="noreferrer">http://localhost/</a>若出现以下页面表示启动成功：</p><p><img src="'+t+'" alt="在这里插入图片描述" width="80%" loading="lazy"></p><p><strong>也可以在任务管理器中查看是否启动成功:</strong></p><p><img src="'+e+'" alt="在这里插入图片描述" width="90%" loading="lazy"></p></div><h2 id="一、常用命令" tabindex="-1">一、常用命令 <a class="header-anchor" href="#一、常用命令" aria-label="Permalink to &quot;一、常用命令&quot;">​</a></h2><table tabindex="0"><thead><tr><th>目的</th><th>Linux / macOS</th><th>Windows（exe 同级目录）</th></tr></thead><tbody><tr><td><strong>启动</strong></td><td><code>nginx</code></td><td><code>start nginx</code> 或双击 <code>nginx.exe</code></td></tr><tr><td><strong>优雅停止</strong></td><td><code>nginx -s quit</code></td><td><code>nginx -s quit</code></td></tr><tr><td><strong>立即停止</strong></td><td><code>nginx -s stop</code></td><td><code>nginx -s stop</code></td></tr><tr><td><strong>重载配置</strong>（<strong>热更新</strong>）</td><td><code>nginx -s reload</code></td><td><code>nginx -s reload</code></td></tr><tr><td><strong>重新打开日志</strong>（切割日志用）</td><td><code>nginx -s reopen</code></td><td><code>nginx -s reopen</code></td></tr><tr><td><strong>测试配置是否正确</strong></td><td><code>nginx -t</code></td><td><code>nginx -t</code></td></tr><tr><td><strong>打印配置信息</strong></td><td><code>nginx -T</code></td><td><code>nginx -T</code></td></tr><tr><td><strong>指定配置文件启动</strong></td><td><code>nginx -c /path/nginx.conf</code></td><td><code>nginx -c D:\\conf\\nginx.conf</code></td></tr><tr><td><strong>指定前缀目录</strong></td><td><code>nginx -p /opt/nginx/</code></td><td><code>nginx -p D:\\nginx\\</code></td></tr><tr><td><strong>查看版本 &amp; 编译参数</strong></td><td><code>nginx -V</code></td><td><code>nginx -V</code></td></tr><tr><td><strong>查看帮助</strong></td><td><code>nginx -h</code></td><td><code>nginx -h</code></td></tr></tbody></table><p>一行搞定常见组合</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 先检查再热重载</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>Windows 下若提示找不到 <code>nginx.pid</code>，先 <code>start nginx</code> 确保进程已启动，再执行 <code>-s reload/quit</code> 即可。</p></div><p><strong>如图：</strong></p><p><img src="'+c+'" alt="" loading="lazy"></p><p><strong>Nginx 日志存放位置：</strong></p><p>访问日志：<code>/nginx/log/nginx/access.log</code><br> 错误日志：<code>/nginx/log/nginx/error.log</code></p><p><img src="'+g+'" alt="" loading="lazy"></p><h2 id="二、核心功能" tabindex="-1">二、核心功能 <a class="header-anchor" href="#二、核心功能" aria-label="Permalink to &quot;二、核心功能&quot;">​</a></h2><table tabindex="0"><thead><tr><th>功能</th><th>描述</th><th>典型应用场景</th></tr></thead><tbody><tr><td>正向代理</td><td>代理客户端请求，隐藏真实客户端信息</td><td>企业内网访问外网、爬虫代理</td></tr><tr><td>反向代理</td><td>代理服务器端响应，隐藏真实服务器信息</td><td>网站接入层、API 网关</td></tr><tr><td>负载均衡</td><td>将流量分发到多个后端服务器</td><td>高并发网站、微服务架构</td></tr><tr><td>动静分离</td><td>静态资源与动态请求分开处理</td><td></td></tr></tbody></table><h3 id="_1-正向代理和反向代理" tabindex="-1">1. 正向代理和反向代理 <a class="header-anchor" href="#_1-正向代理和反向代理" aria-label="Permalink to &quot;1. 正向代理和反向代理&quot;">​</a></h3><p><img src="'+b+'" alt="" width="60%" loading="lazy"></p><h4 id="_1-1-正向代理" tabindex="-1">1.1 正向代理 <a class="header-anchor" href="#_1-1-正向代理" aria-label="Permalink to &quot;1.1 正向代理&quot;">​</a></h4><p>正向代理是指<code>客户端</code>配置代理服务器，通过代理服务器访问目标服务器。客户端并不知道实际的目标服务器，只能通过代理服务器进行访问。</p><p><img src="'+E+`" alt="" width="90%" loading="lazy"></p><p><strong>核心特点</strong></p><ol><li><strong>客户端配置</strong>：需在客户端显式设置代理地址</li><li><strong>隐私保护</strong>：服务器无法获取真实客户端 IP</li><li><strong>访问控制</strong>：企业常用于限制员工上网行为</li></ol><p><strong>典型场景</strong></p><ul><li>企业内网访问外网</li><li>爬虫 IP 轮换</li><li>科学上网工具</li></ul><p><strong>配置示例</strong></p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    resolver </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8.8.8.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://$http_host$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-For $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_1-2-反向代理" tabindex="-1">1.2 反向代理 <a class="header-anchor" href="#_1-2-反向代理" aria-label="Permalink to &quot;1.2 反向代理&quot;">​</a></h4><p>反向代理是指客户端直接访问<code>代理服务器</code>，代理服务器再将请求转发给目标服务器。客户端并不知道实际的目标服务器，只能通过代理服务器进行访问。</p><p><img src="`+m+`" alt="" width="90%" loading="lazy"></p><p><strong>核心特点</strong></p><ol><li><strong>客户端无感知</strong>：用户直接访问代理地址</li><li><strong>服务器保护</strong>：隐藏后端服务器拓扑</li><li><strong>功能扩展</strong>：支持 SSL 卸载、缓存等</li></ol><p><strong>典型场景</strong></p><ul><li><p>网站接入层</p></li><li><p>CDN 边缘节点</p></li><li><p>API 网关</p><p><strong>配置示例</strong></p></li></ul><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> backend </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10.0.0.1:8080 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server 10.0.0.2:8080;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">example.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://backend;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $host;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_2-负载均衡" tabindex="-1">2. 负载均衡 <a class="header-anchor" href="#_2-负载均衡" aria-label="Permalink to &quot;2. 负载均衡&quot;">​</a></h3><p>见这篇文章： <a href="/column/Network/Nginx/负载均衡策略.html">负载均衡策略</a></p><h3 id="_3-动静分离" tabindex="-1">3. 动静分离 <a class="header-anchor" href="#_3-动静分离" aria-label="Permalink to &quot;3. 动静分离&quot;">​</a></h3><p>动静分离是指将网站的静态资源（<code>如HTML、CSS、JS、图片等</code>）和动态内容（如 PHP、Java 生成的页面）分开处理的技术方案。通过<code>Nginx</code>实现动静分离，可以显著提高网站的性能和并发处理能力。</p><p><strong>为什么要做动静分离？</strong></p><p>1、性能优化：静态资源由 Nginx 直接返回，效率比应用服务器高 10 倍以上<br> 2、减轻后端压力：减少应用服务器的请求量，节省 CPU 资源<br> 3、提升用户体验：静态资源加载更快，页面响应更迅速<br> 4、便于扩展：静态资源可以单独做 CDN 加速</p><h4 id="_3-1-动静分离的实现原理" tabindex="-1">3.1 动静分离的实现原理 <a class="header-anchor" href="#_3-1-动静分离的实现原理" aria-label="Permalink to &quot;3.1 动静分离的实现原理&quot;">​</a></h4><p><img src="`+u+`" alt="" width="300px" loading="lazy"></p><h4 id="_3-2-nginx-配置实战" tabindex="-1">3.2 Nginx 配置实战 <a class="header-anchor" href="#_3-2-nginx-配置实战" aria-label="Permalink to &quot;3.2 Nginx 配置实战&quot;">​</a></h4><p><strong>1、基础配置示例</strong></p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">example.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 静态资源目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|ttf)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/static;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 缓存30天</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        access_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 动态请求转发</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://backend_server;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $host;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>2、进阶优化配置</strong></p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 静态资源压缩</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">gzip_types </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text/plain text/css application/json application/javascript;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 静态资源缓存控制</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(jpg|png|gif)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">365d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public, no-transform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 禁止访问隐藏文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> /\\. </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    deny </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>动静分离的目录结构建议</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/var/www/</span></span>
<span class="line"><span>├── static/            # 静态资源</span></span>
<span class="line"><span>│   ├── css/</span></span>
<span class="line"><span>│   ├── js/</span></span>
<span class="line"><span>│   ├── images/</span></span>
<span class="line"><span>│   └── fonts/</span></span>
<span class="line"><span>└── dynamic/           # 动态程序</span></span>
<span class="line"><span>    ├── index.php</span></span>
<span class="line"><span>    └── api/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_3-3-为什么静态资源由-nginx-直接返回回比较快" tabindex="-1">3.3 为什么静态资源由 Nginx 直接返回回比较快 <a class="header-anchor" href="#_3-3-为什么静态资源由-nginx-直接返回回比较快" aria-label="Permalink to &quot;3.3 为什么静态资源由 Nginx 直接返回回比较快&quot;">​</a></h4><p>架构层级更少，处理路径更短。</p><p><strong>Nginx 直接返回</strong>：客户端 → Nginx → 硬盘文件 → 返回客户端（仅需 2 步跳转）</p><p><strong>后端服务器处理</strong>：客户端 → Nginx → 后端程序 → 框架处理 → 读取文件 → 返回 Nginx → 返回客户端（至少 5 步跳转，链路更长）</p><p>📌 类比：就像去图书馆借书，<code>Nginx</code>是管理员直接拿书给你，后端服务器是让管理员先问馆长，馆长再找图书管理员，最后才把书给你。</p>`,54))])}const w=l(y,[["render",x]]);export{N as __pageData,w as default};
