import{_ as l,C as e,c as t,o as p,j as i,G as h,aQ as r,a}from"./chunks/framework.DEi4YP2n.js";const m=JSON.parse('{"title":"Nginx 中 location 配置详解","description":"","frontmatter":{},"headers":[],"relativePath":"column/Network/Nginx/location匹配规则.md","filePath":"column/Network/Nginx/location匹配规则.md","lastUpdated":1760403902000}'),o={name:"column/Network/Nginx/location匹配规则.md"};function d(c,s,k,g,u,b){const n=e("ArticleMetadata");return p(),t("div",null,[s[0]||(s[0]=i("h1",{id:"nginx-中-location-配置详解",tabindex:"-1"},[a("Nginx 中 "),i("code",null,"location"),a(" 配置详解 "),i("a",{class:"header-anchor",href:"#nginx-中-location-配置详解","aria-label":'Permalink to "Nginx 中 `location` 配置详解"'},"​")],-1)),h(n),s[1]||(s[1]=r(`<nav class="table-of-contents"><ul><li><a href="#_1-location-指令回顾">1. location 指令回顾</a></li><li><a href="#_2-location-语法">2. location ~* 语法</a></li><li><a href="#_3-配置一-通用静态资源目录">3. 配置一：通用静态资源目录</a><ul><li><a href="#解释">解释：</a></li></ul></li><li><a href="#_4-配置二-单独优化图片缓存">4. 配置二：单独优化图片缓存</a><ul><li><a href="#解释-1">解释：</a></li></ul></li><li><a href="#_5-两个配置的区别">5. 两个配置的区别</a></li><li><a href="#_6-总结">6. 总结</a></li></ul></nav><p>在前端项目上线时，我们经常需要对 <strong>静态资源（HTML、CSS、JS、图片、字体等）</strong> 做缓存优化。在 <code>Nginx</code> 配置里，经常会看到这样的写法：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 静态资源目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|ttf)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/static;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 缓存30天</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 静态资源缓存控制</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(jpg|png|gif)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">365d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public, no-transform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>很多小伙伴第一次看到这种配置，都会有疑问：</p><ul><li><code>location ~*</code> 是什么语法？</li><li><code>\\.(jpg|png|gif)$</code> 这种正则怎么理解？</li><li>为什么要分开两个规则？</li></ul><p>下面详细讲解。</p><h2 id="_1-location-指令回顾" tabindex="-1">1. <code>location</code> 指令回顾 <a class="header-anchor" href="#_1-location-指令回顾" aria-label="Permalink to &quot;1. \`location\` 指令回顾&quot;">​</a></h2><p>在 <code>Nginx</code> 中，<code>location</code> 用于匹配请求的 URL，决定如何处理请求。常见的匹配方式有：</p><ul><li><p><strong>前缀匹配</strong>（最常见）：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /static/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>匹配 <code>/static/</code> 开头的请求。</p></li><li><p><strong>精确匹配</strong>：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> /index.html </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>只匹配 <code>/index.html</code>。</p></li><li><p><strong>正则匹配</strong>：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.php$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fastcgi_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">127.0.0.1:9000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>匹配 <code>.php</code> 结尾的请求。</p></li></ul><h2 id="_2-location-语法" tabindex="-1">2. <code>location ~*</code> 语法 <a class="header-anchor" href="#_2-location-语法" aria-label="Permalink to &quot;2. \`location ~*\` 语法&quot;">​</a></h2><ul><li><code>~</code>：表示使用 <strong>正则匹配</strong>，区分大小写。</li><li><code>~*</code>：表示使用 <strong>正则匹配，不区分大小写</strong>。</li></ul><p>举个例子：</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \\.jpg$   # 区分大小写，logo.JPG </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不会匹配</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \\.jpg$  # 不区分大小写，logo.JPG </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">也能匹配</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>因此，<code>location ~* \\.(jpg|png|gif)$</code> 表示：匹配 <strong>以 .jpg 或 .png 或 .gif 结尾的请求（不区分大小写）</strong>。</p><h2 id="_3-配置一-通用静态资源目录" tabindex="-1">3. 配置一：通用静态资源目录 <a class="header-anchor" href="#_3-配置一-通用静态资源目录" aria-label="Permalink to &quot;3. 配置一：通用静态资源目录&quot;">​</a></h2><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|ttf)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/static;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="解释" tabindex="-1">解释： <a class="header-anchor" href="#解释" aria-label="Permalink to &quot;解释：&quot;">​</a></h3><ol><li><p><code>~* \\.(html|htm|gif|...)$</code></p><ul><li>匹配常见的静态资源扩展名：网页、图片、文本、JS、CSS、字体等。</li><li><strong>作用：全局规则，一网打尽常见静态资源</strong>。</li></ul></li><li><p><code>root /var/www/static;</code></p><ul><li>静态文件所在目录。</li><li>请求 <code>/main.css</code> → 实际读取 <code>/var/www/static/main.css</code></li></ul></li><li><p><code>expires 30d;</code></p><ul><li><p>设置缓存时间为 30 天。</p></li><li><p>浏览器收到响应头：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Cache-Control: max-age=2592000</span></span>
<span class="line"><span>Expires: &lt;30天后日期&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul></li><li><p><code>access_log off;</code></p><ul><li>关闭访问日志，减少日志文件体积，优化性能。</li></ul></li></ol><h2 id="_4-配置二-单独优化图片缓存" tabindex="-1">4. 配置二：单独优化图片缓存 <a class="header-anchor" href="#_4-配置二-单独优化图片缓存" aria-label="Permalink to &quot;4. 配置二：单独优化图片缓存&quot;">​</a></h2><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(jpg|png|gif)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">365d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public, no-transform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="解释-1" tabindex="-1">解释： <a class="header-anchor" href="#解释-1" aria-label="Permalink to &quot;解释：&quot;">​</a></h3><ol><li><p><code>~* \\.(jpg|png|gif)$</code></p><ul><li>匹配所有 <strong>图片资源</strong>（不区分大小写）。</li></ul></li><li><p><code>expires 365d;</code></p><ul><li>设置缓存时间为 <strong>一年</strong>。</li></ul></li><li><p><code>add_header Cache-Control &quot;public, no-transform&quot;;</code></p><ul><li><code>public</code>：允许任何中间代理（如 CDN）缓存该资源。</li><li><code>no-transform</code>：禁止代理或浏览器对图片进行格式转换或压缩，保证原图质量。</li></ul></li></ol><p>👉 为什么要单独写？</p><ul><li>图片体积大，通常不常变动，适合长时间缓存。</li><li>JS/CSS 更新频率高，缓存过久可能导致版本问题，因此只给 30 天。</li></ul><h2 id="_5-两个配置的区别" tabindex="-1">5. 两个配置的区别 <a class="header-anchor" href="#_5-两个配置的区别" aria-label="Permalink to &quot;5. 两个配置的区别&quot;">​</a></h2><table tabindex="0"><thead><tr><th>配置</th><th>匹配范围</th><th>缓存策略</th><th>应用场景</th></tr></thead><tbody><tr><td>配置一</td><td>html, js, css, 图片, 字体等</td><td>缓存 30 天</td><td>整站通用静态资源</td></tr><tr><td>配置二</td><td>图片 (jpg/png/gif)</td><td>缓存 365 天 + CDN 优化</td><td>针对图片资源的专项优化</td></tr></tbody></table><p>实际项目里，两者会 <strong>同时存在</strong>。</p><ul><li>优先匹配更具体的规则（比如图片走 365d）。</li><li>其他资源走默认的 30d。</li></ul><h2 id="_6-总结" tabindex="-1">6. 总结 <a class="header-anchor" href="#_6-总结" aria-label="Permalink to &quot;6. 总结&quot;">​</a></h2><ul><li><p><code>location ~*</code> = 使用正则匹配，不区分大小写。</p></li><li><p><code>\\.(xxx|yyy)$</code> = 匹配以指定扩展名结尾的文件。</p></li><li><p>可以为不同类型的资源设置不同的缓存策略。</p><ul><li>HTML/JS/CSS → 短缓存（30d）</li><li>图片/字体 → 长缓存（365d，immutable）</li></ul></li><li><p>这样既能提高性能，又能避免缓存导致的版本问题。</p></li></ul><hr><p>✍️ <strong>一句话记忆</strong>：</p><blockquote><p><code>location ~*</code> = 不区分大小写的正则匹配，常用于静态资源缓存控制。</p></blockquote>`,33))])}const y=l(o,[["render",d]]);export{m as __pageData,y as default};
