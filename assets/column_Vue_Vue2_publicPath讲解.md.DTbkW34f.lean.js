import{_ as a,c as i,aO as p,o as e}from"./chunks/framework.Dupuxvm1.js";const t="/assets/publicPath.BPv3PVDl.png",d=JSON.parse('{"title":"publicPath 讲解","description":"","frontmatter":{},"headers":[],"relativePath":"column/Vue/Vue2/publicPath讲解.md","filePath":"column/Vue/Vue2/publicPath讲解.md"}'),l={name:"column/Vue/Vue2/publicPath讲解.md"};function n(h,s,r,c,u,k){return e(),i("div",null,s[0]||(s[0]=[p('<h1 id="publicpath-讲解" tabindex="-1">publicPath 讲解 <a class="header-anchor" href="#publicpath-讲解" aria-label="Permalink to &quot;publicPath 讲解&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>vue.config.js 里面的publicPath是部署应用包时的基本 URL；</p><p>从 Vue CLI 3.3 起 baseUrl 已被 publicPath 替代；</p><p>如果想要了解 vue 的环境变量 process.env 可以阅读这篇文章： <a href="https://blog.csdn.net/qq_43886365/article/details/128370109" target="_blank" rel="noreferrer">vue 中的 process.env.NODE_ENV 讲解</a></p></div><h2 id="_1-publicpath" tabindex="-1">1，publicPath <a class="header-anchor" href="#_1-publicpath" aria-label="Permalink to &quot;1，publicPath&quot;">​</a></h2><p>publicPath 是部署应用包时的基本 URL；默认情况下，Vue CLI 会假设你的应用是被部署在一个域名的根路径上(<a href="https://www.my-app.com/" target="_blank" rel="noreferrer">https://www.my-app.com/</a>)</p><p>如果应用被部署在一个子路径上，你就需要用这个选项指定这个子路径。如果你的应用被部署在 <a href="https://www.my-app.com/my-app/%EF%BC%8C%E5%88%99%E8%AE%BE%E7%BD%AE" target="_blank" rel="noreferrer">https://www.my-app.com/my-app/，则设置</a> publicPath 为 /my-app/。</p><p>这个值也可以被设置为空字符串 (&#39;&#39;) 或是相对路径 (&#39;./&#39;)，这样所有的资源都会被链接为相对路径，这样打出来的包可以被部署在任意路径；</p><p>但相对路径的 publicPath 有一些使用上的限制。在以下情况下，应当避免使用相对 publicPath:</p><ul><li>当使用基于 HTML5 history.pushState 的路由时；</li><li>当使用 pages 选项构建多页面应用时。</li></ul><h2 id="_2-哪里会用到-publicpath" tabindex="-1">2，哪里会用到 publicPath <a class="header-anchor" href="#_2-哪里会用到-publicpath" aria-label="Permalink to &quot;2，哪里会用到 publicPath&quot;">​</a></h2><p>在 vue 中的项目中一般静态文件路径要使用 publicPath 和项目打包部署时都会用到 publicPath;</p><h2 id="_2-1-静态文件使用publicpath" tabindex="-1">2.1 静态文件使用publicPath <a class="header-anchor" href="#_2-1-静态文件使用publicpath" aria-label="Permalink to &quot;2.1 静态文件使用publicPath&quot;">​</a></h2><p>如果你的项目里面的静态文件都放在<strong>public 文件中</strong>，那么使用的时候要使用 publicPath 这个变量，防止打包后静态文件找不到；你需要通过绝对路径来引用它们。</p><p>因为：任何放置在 public 文件夹的静态资源都会被简单的复制，而不经过 webpack；</p><p>下图是 vue-cli 官网给出的使用说明：<a href="https://cli.vuejs.org/zh/guide/html-and-static-assets.html#public-%E6%96%87%E4%BB%B6%E5%A4%B9" target="_blank" rel="noreferrer">链接</a></p><p><code>注意</code>：这里用到了 process.env.BASE_URL,下面会解释的</p><p><img src="'+t+`" alt="在这里插入图片描述"></p><h2 id="_2-2-项目打包使用publicpath" tabindex="-1">2.2 项目打包使用publicPath <a class="header-anchor" href="#_2-2-项目打包使用publicpath" aria-label="Permalink to &quot;2.2 项目打包使用publicPath&quot;">​</a></h2><p>如果你想把开发服务器架设在根路径，你可以使用一个条件式的值：</p><p>这里判断是否是生产环境 如果是那么前面的部署路径加上 /app/；如果不是 默认使用根路径 / ; 生产环境经常配合前端服务器的中 nginx 代理使用；</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  publicPath: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;production&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/app/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-publicpath-和-process-env-base-url" tabindex="-1">3，publicPath 和 process.env.BASE_URL <a class="header-anchor" href="#_3-publicpath-和-process-env-base-url" aria-label="Permalink to &quot;3，publicPath 和 process.env.BASE_URL&quot;">​</a></h2><p>1，如果你在 vue.config.js 里面设置了 publicPath：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  publicPath: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;production&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/video/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">process.env.BASE_URL</p><p>那么 process.env.BASE_URL 其实就是 publicPath;</p><p>不信你可以在组件中 console.log(process.env.BASE_URL)打印出来； BASE_URL 会被 vue.config.js 中 publicPath 变量覆盖。</p></div><p>2，如果没有在 vue.config.js 里面设置 publicPath；那么 process.env.BASE_URL 默认就是根路径 ：/ ;</p><p>3，在 vue 路由的配置项中也会用到 process.env.BASE_URL：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VueRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;history&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  base: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BASE_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  routes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>mode history 代表路由不再显示#，会像如下形式：localhost:8080/user/list；主要是 base 属性 代表着是基本的路由请求的路径：</p><p>如：base: ‘/app/’ 说明项目部署在 app 目录下，那么 vue 所有的路由前面都会自动加上: /app</p>`,29)]))}const b=a(l,[["render",n]]);export{d as __pageData,b as default};
